<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/xml</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">5852892a884d1c00013778ecfa70c83e72d54426ab0beedd99e2fdf9</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">1</stringProp>
        <stringProp name="CounterConfig.end">100000</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">cntr</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
        <stringProp name="TestPlan.comments">used for echotoken to detect messages</stringProp>
      </CounterConfig>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Parameters" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Threads" elementType="Argument">
            <stringProp name="Argument.name">Threads</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Loop" elementType="Argument">
            <stringProp name="Argument.name">Loop</stringProp>
            <stringProp name="Argument.value">4000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">8082</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">8085 , 80</stringProp>
          </elementProp>
          <elementProp name="delay" elementType="Argument">
            <stringProp name="Argument.name">delay</stringProp>
            <stringProp name="Argument.value">100</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SubPath" elementType="Argument">
            <stringProp name="Argument.name">SubPath</stringProp>
            <stringProp name="Argument.value">/rule-engine/services</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/ndcgateway , /entry/ndcgateway, /unisys/</stringProp>
          </elementProp>
          <elementProp name="endpoint" elementType="Argument">
            <stringProp name="Argument.name">endpoint</stringProp>
            <stringProp name="Argument.value">localhost</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">127.0.0.1 , 35.196.106.95, jr-technologies.cloud.tyk.io</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">https, http</stringProp>
          </elementProp>
          <elementProp name="timestamp" elementType="Argument">
            <stringProp name="Argument.name">timestamp</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss,curTime)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="StartDate" elementType="Argument">
            <stringProp name="Argument.name">StartDate</stringProp>
            <stringProp name="Argument.value">2019-04-06</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="EndDate" elementType="Argument">
            <stringProp name="Argument.name">EndDate</stringProp>
            <stringProp name="Argument.value">2019-11-05</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CityCodes" elementType="Argument">
            <stringProp name="Argument.name">CityCodes</stringProp>
            <stringProp name="Argument.value">MIA,ATH,LON,FUK,FRA,MCO,CHQ,THR</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Flights" elementType="Argument">
            <stringProp name="Argument.name">Flights</stringProp>
            <stringProp name="Argument.value">AUA,BON,AUA,CUR,ATH,FRA,FCO,LON,MCO,CTS,CHQ,ATH</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RCMS" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${Loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${Threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1506082089000</longProp>
        <longProp name="ThreadGroup.end_time">1506082089000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay">${delayForThreads}</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="false">
          <collectionProp name="Arguments.arguments">
            <elementProp name="onds" elementType="Argument">
              <stringProp name="Argument.name">onds</stringProp>
              <stringProp name="Argument.value">AUA,CUR,AUA,BON</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">MSP,ORD,MPN,ASI,BOM,DEL,BOM,SCL</stringProp>
            </elementProp>
            <elementProp name="valid_flight_numbers" elementType="Argument">
              <stringProp name="Argument.name">valid_flight_numbers</stringProp>
              <stringProp name="Argument.value">1246,796,1541,744,987,112,1880,1541,2216,2215,1215,1184,1238,1729,1060,1666,1026,1247,1000,2042,1201</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Authorization" elementType="Argument">
              <stringProp name="Argument.name">Authorization</stringProp>
              <stringProp name="Argument.value">Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ2a2FzaW1hdGlzQGpydGVjaG5vbG9naWVzLmNvbSIsImZpcnN0TmFtZSI6IlZhc2lsaXMiLCJsYXN0TmFtZSI6Ikthc2ltYXRpcyIsImdlbmRlciI6Ik1hbGUiLCJiaXJ0aGRhdGUiOi04MDY4MDMyMDAwMDAsInV1aWQiOiIxMTgyNTIyNDY2ODYyMDQ1MSIsImV4cCI6MTU0MTMzODI0OX0.3YF-StMVFT-E3K9_qD4HYLwYzxTeyA5dyLs0xGeqEE0</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ2a2FzaW1hdGlzQGpydGVjaG5vbG9naWVzLmNvbSIsImZpcnN0TmFtZSI6IlZhc2lsaXMiLCJsYXN0TmFtZSI6Ikthc2ltYXRpcyIsImdlbmRlciI6Ik1hbGUiLCJiaXJ0aGRhdGUiOi04MDY4MDMyMDAwMDAsInV1aWQiOiIxMTgyNTIyNDY2ODYyMDQ1MSIsImV4cCI6MTUzODY1NjM0OH0.ONDVZSwLaL7OGcGTredD-JDoqlEZqniduYv7xZBLAyA</stringProp>
            </elementProp>
            <elementProp name="endpoint" elementType="Argument">
              <stringProp name="Argument.name">endpoint</stringProp>
              <stringProp name="Argument.value">http://40.113.125.72:8080/app/api/air-shopping?mode=both</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">http://23.100.12.1:8080/app/api/air-shopping?mode=both; http://13.80.2.61:8080/app/api/air-shopping?mode=both</stringProp>
            </elementProp>
            <elementProp name="_endpoint" elementType="Argument">
              <stringProp name="Argument.name">_endpoint</stringProp>
              <stringProp name="Argument.value">13.80.2.61</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">23.100.12.1</stringProp>
            </elementProp>
            <elementProp name="port" elementType="Argument">
              <stringProp name="Argument.name">port</stringProp>
              <stringProp name="Argument.value">8080</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="isRoundTrip" elementType="Argument">
              <stringProp name="Argument.name">isRoundTrip</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
          <stringProp name="TestPlan.comments">http://23.100.12.1:8080/app/api/air-shopping?mode=both
http://localhost:8458/app/api/air-shopping?mode=both
</stringProp>
        </Arguments>
        <hashTree/>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="RandomDate generator" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">true</boolProp>
          <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;

formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
calendar = Calendar.getInstance();
formatter.setTimeZone(calendar.getTimeZone());

vars.put(&quot;now&quot;, formatter.format(calendar.getTime()));

String startDate = vars.get(&quot;StartDate&quot;);
String [] startDateParts = startDate.split(&quot;\\-&quot;);
//Set Start Time. Attention: December = 11
int startDateYear = Integer.parseInt(startDateParts[0]);
int startDateMonth = Integer.parseInt(startDateParts[1])-1;
int startDateDay = Integer.parseInt(startDateParts[2]);




calendar.set(startDateYear, startDateMonth, startDateDay);
startTime = calendar.getTimeInMillis();



String endDate = vars.get(&quot;EndDate&quot;);
String [] endDateParts = endDate.split(&quot;\\-&quot;);
//Set Start Time. Attention: December = 11
int endDateYear = Integer.parseInt(endDateParts[0]);
int endDateMonth = Integer.parseInt(endDateParts[1])-1;
int endDateDay = Integer.parseInt(endDateParts[2]);



calendar.set(endDateYear, endDateMonth, endDateDay);
endTime = calendar.getTimeInMillis();

randomTime1 = startTime + (long)(Math.random()*(endTime-startTime));
randomTime2 = randomTime1 + (long)(Math.random()*(endTime - randomTime1)+86400000);
//randomTime3 = randomTime2 + (long)(Math.random()*(endTime - randomTime1)+86400000);


String s;

calendar.setTimeInMillis(randomTime1);
s= formatter.format(calendar.getTime());
vars.put(&quot;start&quot;, s);


calendar.setTimeInMillis(randomTime2);
s = formatter.format(calendar.getTime());
vars.put(&quot;returnDate&quot;,s );


String[] cityCodes = (vars.get(&quot;CityCodes&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(cityCodes.length);
String cityCode = cityCodes[idx];
vars.put(&quot;CityCode&quot;, cityCode);


String[] onds = (vars.get(&quot;Flights&quot;)).split(&quot;,&quot;);
idx = new Random().nextInt(onds.length/2);
String origin = onds[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = onds[idx2];
vars.put(&quot;destination&quot;, destination);





//calendar.setTimeInMillis(randomTime3);
//vars.put(&quot;end2&quot;, formatter.format(calendar.getTime()));



//vars.put(&quot;start&quot;, &quot;2017-11-20&quot;);
//vars.put(&quot;end&quot;, &quot;2017-11-25&quot;);

</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="bound_nbr" enabled="true">
          <stringProp name="maximumValue">2</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">bound_nbr</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="adt_number" enabled="true">
          <stringProp name="maximumValue">2</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">adt_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="chd_number" enabled="true">
          <stringProp name="maximumValue">1</stringProp>
          <stringProp name="minimumValue">0</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">chd_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ServiceList Many Segments Dynamic" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;ServiceListRQ TimeStamp=&quot;2019-04-05T14:43:17.196+03:00&quot; Version=&quot;IATA2017.2&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST/2017.2&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;GR&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;${CityCode}&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime&gt;2019-04-05T14:43:17.228+03:00&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
			&lt;/Device&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;ReferenceVersion&gt;2.0.0.RELEASE&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;AgencyID&gt;7I&lt;/AgencyID&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
		&lt;Recipient&gt;&#xd;
			&lt;MarketingCarrierRecipient&gt;&#xd;
				&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
			&lt;/MarketingCarrierRecipient&gt;&#xd;
		&lt;/Recipient&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;ShoppingResponseID&gt;&#xd;
		&lt;ResponseID&gt;201-e570fe492743442b819336c7e5fc76d1&lt;/ResponseID&gt;&#xd;
	&lt;/ShoppingResponseID&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:50&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;738&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;987&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT4H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;01:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2121&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2121&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;319&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT9H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F70&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:50&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;738&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;987&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT4H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:20&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:50&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;01:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2122&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2122&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;319&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT9H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F70&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:50&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:20&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${destination}${origin}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${returnDate}&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;${origin}${destination}&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;${origin}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;${destination}&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;${start}&lt;/Date&gt;&#xd;
					&lt;Time&gt;19:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;152&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;152&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;BES&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT3H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
	&lt;/Query&gt;&#xd;
	&lt;DataLists&gt;&#xd;
		&lt;PassengerList&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH2&quot;&gt;&#xd;
				&lt;PTC&gt;CHD&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH1&quot;&gt;&#xd;
				&lt;PTC&gt;ADT&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH3&quot;&gt;&#xd;
				&lt;PTC&gt;INF&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/PassengerList&gt;&#xd;
	&lt;/DataLists&gt;&#xd;
&lt;/ServiceListRQ&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ServiceList Many Segments" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;ServiceListRQ TimeStamp=&quot;2019-04-05T14:43:17.196+03:00&quot; Version=&quot;IATA2017.2&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST/2017.2&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;GR&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;ATH&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime&gt;2019-04-05T14:43:17.228+03:00&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
			&lt;/Device&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;ReferenceVersion&gt;2.0.0.RELEASE&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;AgencyID&gt;7I&lt;/AgencyID&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
		&lt;Recipient&gt;&#xd;
			&lt;MarketingCarrierRecipient&gt;&#xd;
				&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
			&lt;/MarketingCarrierRecipient&gt;&#xd;
		&lt;/Recipient&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;ShoppingResponseID&gt;&#xd;
		&lt;ResponseID&gt;201-e570fe492743442b819336c7e5fc76d1&lt;/ResponseID&gt;&#xd;
	&lt;/ShoppingResponseID&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:50&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;738&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;987&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT4H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;01:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2121&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2121&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;319&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT9H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F70&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;200&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber OperationalSuffix=&quot;Z&quot;&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:50&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;350&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;738&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;351&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;987&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT4H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;402&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;110&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;161&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:20&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:50&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;01:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2122&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;2122&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;319&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT9H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;500&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021401&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;409&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021601&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;21:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;415&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;400&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;405&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;451&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;450&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;403&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:40&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;407&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;411&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011201&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;115&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG011001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;18:00&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;442&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F70&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H30M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG021101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;08:35&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;401&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;170&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;160&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;360&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M84&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:50&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;13:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;408&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H40M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020701&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;300&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010901&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:20&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:55&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;416&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010301&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;14:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;15:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;171&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010501&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;22:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;23:30&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;40&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT1H0M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG020101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;12:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;100&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;M83&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT2H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;CURAUA&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG022001&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;09:30&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-03&lt;/Date&gt;&#xd;
					&lt;Time&gt;10:05&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;4343&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010101&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;16:00&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;19:15&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;152&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;152&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;BES&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;Y&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT3H15M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
	&lt;/Query&gt;&#xd;
	&lt;DataLists&gt;&#xd;
		&lt;PassengerList&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH2&quot;&gt;&#xd;
				&lt;PTC&gt;CHD&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH1&quot;&gt;&#xd;
				&lt;PTC&gt;ADT&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH3&quot;&gt;&#xd;
				&lt;PTC&gt;INF&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/PassengerList&gt;&#xd;
	&lt;/DataLists&gt;&#xd;
&lt;/ServiceListRQ&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ServiceList 1 SEG" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;ServiceListRQ TimeStamp=&quot;2019-04-05T14:43:17.196+03:00&quot; Version=&quot;IATA2017.2&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST/2017.2&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;GR&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;ATH&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime&gt;2019-04-05T14:43:17.228+03:00&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
			&lt;/Device&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;ReferenceVersion&gt;2.0.0.RELEASE&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;AgencyID&gt;7I&lt;/AgencyID&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
		&lt;Recipient&gt;&#xd;
			&lt;MarketingCarrierRecipient&gt;&#xd;
				&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
			&lt;/MarketingCarrierRecipient&gt;&#xd;
		&lt;/Recipient&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;ShoppingResponseID&gt;&#xd;
		&lt;ResponseID&gt;201-e570fe492743442b819336c7e5fc76d1&lt;/ResponseID&gt;&#xd;
	&lt;/ShoppingResponseID&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;OriginDestination&gt;&#xd;
			&lt;OriginDestinationKey&gt;AUACUR&lt;/OriginDestinationKey&gt;&#xd;
			&lt;Flight&gt;&#xd;
				&lt;SegmentKey&gt;SEG010801&lt;/SegmentKey&gt;&#xd;
				&lt;Departure&gt;&#xd;
					&lt;AirportCode&gt;AUA&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:15&lt;/Time&gt;&#xd;
				&lt;/Departure&gt;&#xd;
				&lt;Arrival&gt;&#xd;
					&lt;AirportCode&gt;CUR&lt;/AirportCode&gt;&#xd;
					&lt;Date&gt;2019-05-01&lt;/Date&gt;&#xd;
					&lt;Time&gt;17:50&lt;/Time&gt;&#xd;
				&lt;/Arrival&gt;&#xd;
				&lt;MarketingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/MarketingCarrier&gt;&#xd;
				&lt;OperatingCarrier&gt;&#xd;
					&lt;AirlineID&gt;7I&lt;/AirlineID&gt;&#xd;
					&lt;FlightNumber&gt;410&lt;/FlightNumber&gt;&#xd;
				&lt;/OperatingCarrier&gt;&#xd;
				&lt;Equipment&gt;&#xd;
					&lt;AircraftCode&gt;F50&lt;/AircraftCode&gt;&#xd;
				&lt;/Equipment&gt;&#xd;
				&lt;ClassOfService&gt;&#xd;
					&lt;Code&gt;L&lt;/Code&gt;&#xd;
				&lt;/ClassOfService&gt;&#xd;
				&lt;Details&gt;&#xd;
					&lt;FlightDuration&gt;&#xd;
						&lt;Value&gt;P0DT0H35M0S&lt;/Value&gt;&#xd;
					&lt;/FlightDuration&gt;&#xd;
				&lt;/Details&gt;&#xd;
			&lt;/Flight&gt;&#xd;
		&lt;/OriginDestination&gt;&#xd;
	&lt;/Query&gt;&#xd;
	&lt;DataLists&gt;&#xd;
		&lt;PassengerList&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH2&quot;&gt;&#xd;
				&lt;PTC&gt;CHD&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH1&quot;&gt;&#xd;
				&lt;PTC&gt;ADT&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger PassengerID=&quot;SH3&quot;&gt;&#xd;
				&lt;PTC&gt;INF&lt;/PTC&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/PassengerList&gt;&#xd;
	&lt;/DataLists&gt;&#xd;
&lt;/ServiceListRQ&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="false">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${Authorization}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">application-auth</stringProp>
                <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MDM3YzAyZS0yOTViLTQxMTQtYjMzMS0yNGY0YTA0NmI1OWIiLCJuYW1lIjoiODJkYzA1ZTMtNTg2OS00ODg3LTljMGUtYzExMWRhYjVhNDExIn0.jRHDyM-oj4U4z393x7Tql_yA36UScN1CeWGJndpuang</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);





</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
            <stringProp name="JSONPostProcessor.referenceNames">NoOfferResponse</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.AirShoppingRS.Offers</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getResponseID" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getResponseID</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/ShoppingResponseID/ResponseID</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPriceGuaranteeTimeLimit" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getPriceGuaranteeTimeLimit</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/PriceGuaranteeTimeLimit/@Timestamp</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getTicketBy" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getTicketBy</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/TicketByTimeLimit/TicketBy</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getErrorsAndWarnings" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getErrorsAndWarnings</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">count(/AirShoppingRS/Warnings|/AirShoppingRS/Errors)</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">import java.io.*;
import javax.xml.parsers.*;
import java.util.Arrays;
import org.w3c.dom.*;
import org.xml.sax.SAXException;
import org.xml.sax.InputSource;
import org.apache.jmeter.samplers.SampleResult;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.NodeList;
import org.w3c.dom.Document;
import javBeax.xml.xpath.XPathConstants;
import javBeax.xml.xpath.XPathConstants.NODESET;
import javax.xml.namespace.NamespaceContext;
import java.util.Random;
import java.util.ArrayList;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.dom.DOMSource;


String domToXML(Node n){ 
    TransformerFactory tFactory = TransformerFactory.newInstance();
    Transformer transformer = tFactory.newTransformer();
    transformer.setOutputProperty(&quot;indent&quot;, &quot;yes&quot;);
    StringWriter sw = new StringWriter();
    StreamResult result = new StreamResult(sw);
    DOMSource source = new DOMSource(n);
    transformer.transform(source, result);
    return sw.toString();

}
    
try {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);
        DocumentBuilder builder = domFactory.newDocumentBuilder();



        // access result of parent sampler via &quot;ctx&quot; BeanShell variable        
        SampleResult result = ctx.getPreviousResult();

        InputSource is = new InputSource(new StringReader(result.getResponseDataAsString()));

        //Construct a dom Document to access airshopping rs
        Document doc = builder.parse(is);


        // Extract global variable nodes and elements
        Element dataListElement =(Element) doc.getDocumentElement().getElementsByTagName(&quot;DataLists&quot;).item(0);
        NodeList ondNodes = (NodeList) dataListElement.getElementsByTagName(&quot;OriginDestination&quot;);
        NodeList travelersList = dataListElement.getElementsByTagName(&quot;AnonymousTraveler&quot;);
        NodeList flightNodes  = ((Element) (dataListElement.getElementsByTagName(&quot;FlightList&quot;).item(0))).getElementsByTagName(&quot;Flight&quot;);
        NodeList serviceListNodes = ((Element)dataListElement.getElementsByTagName(&quot;ServiceList&quot;).item(0)).getElementsByTagName(&quot;Service&quot;);
        NodeList flightSegmentNodes  = dataListElement.getElementsByTagName(&quot;FlightSegment&quot;);
        

        int i=0;
        Element n = null;
        ArrayList paxRefs = new ArrayList();

        // Extract all travelers and store travelers objectkey.
        for(i=0; i&lt;travelersList.getLength(); i++){
            Element el = (Element) travelersList.item(i);
            paxRefs.add(el.getAttribute(&quot;ObjectKey&quot;));
        }



        String outBoundflightRef = &quot;&quot;;
        String inBoundflightRef = &quot;&quot;;
        String[] outBoundSegRefsString = null;
        String[] inBoundSegRefsString = null;

        String departureAirportCode = &quot;&quot;;
        String arrivalAirportCode = &quot;&quot;;
        
        
        
        //******** The following lines, find and store the outbound/inbound flights.
        // We include only the flights with flightNumber stored in &quot;valid_flight_numbers&quot;
        // variable.
        

        //iterate all onds.
        for (i = 0; i &lt; ondNodes.getLength(); i++) {
            n = (Element) ondNodes.item(i);

            // find the flightReference of the onde (1 Flight per ond)
            String[] flightRefs = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;);		
            
            
            int r = 0;
            // if &quot;valid_flight_numbers&quot; is not set, just choose a random flight.
            if(vars.get(&quot;valid_flight_numbers&quot;)==null)
                r = new Random().nextInt(flightRefs.length);
            
            else{
                List validFlightNumbers = Arrays
                    .asList(vars.get(&quot;valid_flight_numbers&quot;).split(&quot;\\,&quot;));
                
                
                int found =0;

                //iterate all flight options
                for(r=0; r&lt;flightRefs.length; r++){
                    if(found&gt;0){
                        r--;
                        break;
                    }
                    String f = flightRefs[r];
                    //iterate all flight nodes to find the specific flight node.
                    for (int k = 0; k &lt; flightNodes.getLength(); k++) {
                        Element nn = (Element) flightNodes.item(k);
                        if(nn.getAttribute(&quot;FlightKey&quot;).equals(f)){ 
                            String[] segs = nn.getElementsByTagName(&quot;SegmentReferences&quot;)
                                .item(0).getTextContent().split(&quot;\\s+&quot;);	


                            //iterate all segment of the specific flight
                            found =1;
                            for(String ss: segs){
                                //iterate all flight segment nodes to find the specific segment
                                for(int m=0; m&lt;flightSegmentNodes.getLength(); m++){
                                    Element nnn = (Element)flightSegmentNodes.item(m);
                                    if(nnn.getAttribute(&quot;SegmentKey&quot;).equals(ss)){
                                        String fn = nnn.getElementsByTagName(&quot;FlightNumber&quot;)
                                            .item(0).getTextContent();
                                        if(!validFlightNumbers.contains(fn)){
                                            found = -1;
                                            break;
                                        }
                                        break;
                                    }
                                }
                                if(found&lt;0){
                                    break;
                                }

                            }
                            break;
                        }
                    }
                }
                // this should not happen.. FlightRef couldn&apos;t be found
                if(r==flightRefs.length){
                    r = new Random().nextInt(flightRefs.length);
                }
            }

            
            if(n.getAttribute(&quot;OriginDestinationKey&quot;).equals(&quot;OD1&quot;)){
                //this is the outbound ond.

                
                outBoundflightRef = flightRefs[r];

                departureAirportCode  = n.getElementsByTagName(&quot;DepartureCode&quot;)
                    .item(0).getTextContent();
                arrivalAirportCode  = n.getElementsByTagName(&quot;ArrivalCode&quot;)
                    .item(0).getTextContent();
            }else{
                // this is the inbound ond.
                
                inBoundflightRef = flightRefs[r];
            }
        }

        //save inbound/outbound flight references.
        vars.put(&quot;OutBoundFlightRef&quot;,outBoundflightRef);

        vars.put(&quot;OutBoundDepartureCode&quot;,departureAirportCode );
        vars.put(&quot;OutBoundArrivalCode&quot;,arrivalAirportCode);

        vars.put(&quot;InBoundFlightRef&quot;,inBoundflightRef);
        vars.put(&quot;InBoundDepartureCode&quot;,arrivalAirportCode );
        vars.put(&quot;InBoundArrivalCode&quot;,departureAirportCode);
                



        String flightListNodes = &quot;&quot;;


        for (i = 0; i &lt; flightNodes.getLength(); i++) {
            n = (Element) flightNodes.item(i);

            if(n.getAttribute(&quot;FlightKey&quot;).equals(outBoundflightRef)){

                    outBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                        .item(0).getTextContent().split(&quot;\\s+&quot;);	
            }else if (n.getAttribute(&quot;FlightKey&quot;).equals(inBoundflightRef)){
                inBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                    .item(0).getTextContent().split(&quot;\\s+&quot;);	

            }else{
                continue;
            }
            flightListNodes += domToXML(n);
        }

        // trim out redundant namespace attribute.
        vars.put(&quot;FlightListNodes&quot;,flightListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
        
        

        String outBoundSegmentListNodes = &quot;&quot;;
        String inBoundSegmentListNodes = &quot;&quot;;
        ArrayList outBoundSegmentList = new ArrayList();
        ArrayList inBoundSegmentList = new ArrayList();

        // extract inbound/outbound segment nodes and keys
        for (i = 0; i &lt; flightSegmentNodes.getLength(); i++) {
            n = (Element) flightSegmentNodes.item(i);
            for(int j=0; j&lt;outBoundSegRefsString.length; j++){

                if(outBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    outBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }

            }
			
            for(int j=0; j&lt;inBoundSegRefsString.length; j++){

                if(inBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    inBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }


            }

        }
        
        vars.put(&quot;FlightSegmentListNodes&quot;,
            outBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;) + &quot;\n&quot; +
            inBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));

     	
        String allSegmentRefs = &quot;&quot;;

        for(i=0; i&lt;inBoundSegRefsString.length-1; i++){
            allSegmentRefs += inBoundSegRefsString[i] +&quot; &quot;;
        }
        allSegmentRefs +=  inBoundSegRefsString[i] + &quot; &quot;;

        for(i=0; i&lt;outBoundSegRefsString.length-1; i++){
            allSegmentRefs += outBoundSegRefsString[i] + &quot; &quot;;
        }
        allSegmentRefs +=  outBoundSegRefsString[i];

        vars.put(&quot;AllSegmentRefs&quot;,allSegmentRefs);


        // Find the offer for the outbound Flight

        String outBoundOfferId = &quot;&quot;;
        String inBoundOfferId = &quot;&quot;;

        NodeList offersElements = doc.getDocumentElement()
            .getElementsByTagName(&quot;AirlineOffer&quot;);

        Element outBoundOfferElement = null;
        Element inBoundOfferElement = null;

        for(i=0; i&lt;offersElements.getLength(); i++){

            n = (Element)offersElements.item(i);
            String offerFlightRef = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent();

            if(offerFlightRef.equals(outBoundflightRef)){
                    outBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    outBoundOfferElement = n;
            }
            else if(offerFlightRef.equals(inBoundflightRef)){
                    inBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    inBoundOfferElement = n;
            }
        }

        vars.put(&quot;OutBoundOfferId&quot;,outBoundOfferId);
        vars.put(&quot;InBoundOfferId&quot;,inBoundOfferId);

        ///Construct OutBound-Offer Flights
        String flightsOutBound = &quot;&quot;;


        for(i=0; i&lt;outBoundSegmentList.size(); i++){

            Element el = (Element) outBoundSegmentList.get(i);
            flightsOutBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element) (el.getElementsByTagName(&quot;Departure&quot;)
                .item(0))).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();


            flightsOutBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; + departAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + departDate 
                + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;)
                .item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; + arrAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId+&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsOutBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;
            flightsOutBound += &quot;&lt;/Flight&gt;&quot;;
        }

        vars.put(&quot;flightsOutBound&quot;,flightsOutBound );  

        ///Construct InBound-Offer Flights
        String flightsInBound =&quot;&quot; ;
        for(i=0; i&lt;inBoundSegmentList.size(); i++){
            Element el = (Element) inBoundSegmentList.get(i);
            flightsInBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;).item(0))
                .getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();
            
            flightsInBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; 
                + departAirportCode+&quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; 
                + departDate + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; 
                + arrAirportCode + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId + &quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsInBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;

            flightsInBound += &quot;&lt;/Flight&gt;&quot;;
        }


        vars.put(&quot;flightsInBound&quot;,flightsInBound );  
        
        ///Construct fare detail for outbound
        int j;
        NodeList fareDetails = outBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);
        for(i=0; i&lt;fareDetails.getLength(); i++){
            n = (Element) fareDetails.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;).
                item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);
            
            for(j=0; j&lt;fareComponents.getLength(); j++){
                ((Element)fareComponents.item(j)).
                    getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
            }
            String flightDetailsString = &quot;&quot;;
            flightDetailsString+= domToXML(fareDetail);

            for(Object paxO: paxRefs){        
                String pax = (String)paxO;
                if(offerItemId.equals(outBoundOfferId+ &quot;#&quot; + pax)){
                    vars.put(&quot;OutBoundFareDetails&quot; 
                        + pax,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                    break;
                }
            }
        }

        ///Construct fare detail for inbound
        NodeList fareDetails1 = inBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);

        for(i=0; i&lt;fareDetails1.getLength(); i++){
            n = (Element) fareDetails1.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;)
                .item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);

            for(j=0; j&lt;fareComponents.getLength(); j++){
                Element el = (Element)fareComponents.item(j);
                if(el.getElementsByTagName(&quot;Remark&quot;).getLength()&gt;0){
                    el.getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
                }
            }

            String flightDetailsString = &quot;&quot;;
            flightDetailsString += domToXML(fareDetail);
            for(Object paxO: paxRefs){        
              String pax = (String)paxO;
              if(offerItemId.equals(inBoundOfferId + &quot;#&quot; + pax)){
                  vars.put(&quot;InBoundFareDetails&quot; 
                      + pax ,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                  break;
              }
            }
        }

        
        // Find total payment amount, by summing 
        // all &quot;TotalPrice&quot; values of InBound/Outbound Offers.    
        float payment = 0.0F;

        payment +=
        Float.parseFloat(
            ((Element)outBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        payment +=
        Float.parseFloat(
            ((Element)inBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        // sum service amounts.
        for(i=0; i&lt;serviceListNodes.getLength(); i++){
            n = (Element)serviceListNodes.item(i);

            float sprice= 
                Float.parseFloat(
                n.getElementsByTagName(&quot;Total&quot;).item(0).getTextContent());

            int numOfPassengers = n.getElementsByTagName(&quot;PassengerReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;).length;

            payment += sprice * numOfPassengers * (outBoundSegmentList.size()
                + inBoundSegmentList.size());

        }
        vars.put(&quot;payment&quot;, String.valueOf(payment));

    } catch (Exception ex) {
        IsSuccess = false;
        log.error(ex.getMessage());
        ex.printStackTrace();
    }


    </stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If has Children" enabled="false">
          <stringProp name="IfController.condition">${chd_number}&gt;0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="isRoundTrip" enabled="true">
            <stringProp name="IfController.condition">${bound_nbr}&gt;1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Else" enabled="false">
            <stringProp name="IfController.condition">${bound_nbr}==1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirShoppingRQ OneWay ADT CHD" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;EchoToken&quot;: &quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-2OND&quot;,&#xd;
	&quot;RecaptchaResponse&quot;: &quot;dummy&quot;,&#xd;
	&quot;MsgType&quot;: &quot;AirShopping&quot;,&#xd;
	&quot;Parameters&quot;: {&#xd;
		&quot;Languages&quot;: [&quot;en&quot;],&#xd;
		&quot;CurrencyCodes&quot;: [&quot;USD&quot;]&#xd;
	},&#xd;
	&quot;OriginDestinations&quot;: [{&#xd;
			&quot;Departure&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${origin}&quot;,&#xd;
				&quot;Date&quot;: &quot;${start}&quot;&#xd;
			},&#xd;
			&quot;Arrival&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${destination}&quot;&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;AnonymousTraveler&quot;: [{&#xd;
			&quot;PTC&quot;: &quot;ADT&quot;,&#xd;
			&quot;Quantity&quot;: ${adt_number}&#xd;
		},&#xd;
		{&#xd;
			&quot;PTC&quot;: &quot;CNN&quot;,&#xd;
			&quot;Quantity&quot;:${chd_number}&#xd;
		}&#xd;
	],&#xd;
	&quot;Metadata&quot;: {&#xd;
		&quot;LanguageMetadata&quot;: {&#xd;
			&quot;Display&quot;: &quot;en&quot;&#xd;
		}&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${Authorization}</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">application-auth</stringProp>
                    <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MDM3YzAyZS0yOTViLTQxMTQtYjMzMS0yNGY0YTA0NmI1OWIiLCJuYW1lIjoiODJkYzA1ZTMtNTg2OS00ODg3LTljMGUtYzExMWRhYjVhNDExIn0.jRHDyM-oj4U4z393x7Tql_yA36UScN1CeWGJndpuang</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);





</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="false">
                <stringProp name="JSONPostProcessor.referenceNames">NoOfferResponse</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.AirShoppingRS.Offers</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">0</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getResponseID" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getResponseID</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/ShoppingResponseID/ResponseID</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPriceGuaranteeTimeLimit" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getPriceGuaranteeTimeLimit</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/PriceGuaranteeTimeLimit/@Timestamp</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getTicketBy" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getTicketBy</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/TicketByTimeLimit/TicketBy</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getErrorsAndWarnings" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getErrorsAndWarnings</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">count(/AirShoppingRS/Warnings|/AirShoppingRS/Errors)</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.io.*;
import javax.xml.parsers.*;
import java.util.Arrays;
import org.w3c.dom.*;
import org.xml.sax.SAXException;
import org.xml.sax.InputSource;
import org.apache.jmeter.samplers.SampleResult;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.NodeList;
import org.w3c.dom.Document;
import javBeax.xml.xpath.XPathConstants;
import javBeax.xml.xpath.XPathConstants.NODESET;
import javax.xml.namespace.NamespaceContext;
import java.util.Random;
import java.util.ArrayList;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.dom.DOMSource;


String domToXML(Node n){ 
    TransformerFactory tFactory = TransformerFactory.newInstance();
    Transformer transformer = tFactory.newTransformer();
    transformer.setOutputProperty(&quot;indent&quot;, &quot;yes&quot;);
    StringWriter sw = new StringWriter();
    StreamResult result = new StreamResult(sw);
    DOMSource source = new DOMSource(n);
    transformer.transform(source, result);
    return sw.toString();

}
    
try {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);
        DocumentBuilder builder = domFactory.newDocumentBuilder();



        // access result of parent sampler via &quot;ctx&quot; BeanShell variable        
        SampleResult result = ctx.getPreviousResult();

        InputSource is = new InputSource(new StringReader(result.getResponseDataAsString()));

        //Construct a dom Document to access airshopping rs
        Document doc = builder.parse(is);


        // Extract global variable nodes and elements
        Element dataListElement =(Element) doc.getDocumentElement().getElementsByTagName(&quot;DataLists&quot;).item(0);
        NodeList ondNodes = (NodeList) dataListElement.getElementsByTagName(&quot;OriginDestination&quot;);
        NodeList travelersList = dataListElement.getElementsByTagName(&quot;AnonymousTraveler&quot;);
        NodeList flightNodes  = ((Element) (dataListElement.getElementsByTagName(&quot;FlightList&quot;).item(0))).getElementsByTagName(&quot;Flight&quot;);
        NodeList serviceListNodes = ((Element)dataListElement.getElementsByTagName(&quot;ServiceList&quot;).item(0)).getElementsByTagName(&quot;Service&quot;);
        NodeList flightSegmentNodes  = dataListElement.getElementsByTagName(&quot;FlightSegment&quot;);
        

        int i=0;
        Element n = null;
        ArrayList paxRefs = new ArrayList();

        // Extract all travelers and store travelers objectkey.
        for(i=0; i&lt;travelersList.getLength(); i++){
            Element el = (Element) travelersList.item(i);
            paxRefs.add(el.getAttribute(&quot;ObjectKey&quot;));
        }



        String outBoundflightRef = &quot;&quot;;
        String inBoundflightRef = &quot;&quot;;
        String[] outBoundSegRefsString = null;
        String[] inBoundSegRefsString = null;

        String departureAirportCode = &quot;&quot;;
        String arrivalAirportCode = &quot;&quot;;
        
        
        
        //******** The following lines, find and store the outbound/inbound flights.
        // We include only the flights with flightNumber stored in &quot;valid_flight_numbers&quot;
        // variable.
        

        //iterate all onds.
        for (i = 0; i &lt; ondNodes.getLength(); i++) {
            n = (Element) ondNodes.item(i);

            // find the flightReference of the onde (1 Flight per ond)
            String[] flightRefs = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;);		
            
            
            int r = 0;
            // if &quot;valid_flight_numbers&quot; is not set, just choose a random flight.
            if(vars.get(&quot;valid_flight_numbers&quot;)==null)
                r = new Random().nextInt(flightRefs.length);
            
            else{
                List validFlightNumbers = Arrays
                    .asList(vars.get(&quot;valid_flight_numbers&quot;).split(&quot;\\,&quot;));
                
                
                int found =0;

                //iterate all flight options
                for(r=0; r&lt;flightRefs.length; r++){
                    if(found&gt;0){
                        r--;
                        break;
                    }
                    String f = flightRefs[r];
                    //iterate all flight nodes to find the specific flight node.
                    for (int k = 0; k &lt; flightNodes.getLength(); k++) {
                        Element nn = (Element) flightNodes.item(k);
                        if(nn.getAttribute(&quot;FlightKey&quot;).equals(f)){ 
                            String[] segs = nn.getElementsByTagName(&quot;SegmentReferences&quot;)
                                .item(0).getTextContent().split(&quot;\\s+&quot;);	


                            //iterate all segment of the specific flight
                            found =1;
                            for(String ss: segs){
                                //iterate all flight segment nodes to find the specific segment
                                for(int m=0; m&lt;flightSegmentNodes.getLength(); m++){
                                    Element nnn = (Element)flightSegmentNodes.item(m);
                                    if(nnn.getAttribute(&quot;SegmentKey&quot;).equals(ss)){
                                        String fn = nnn.getElementsByTagName(&quot;FlightNumber&quot;)
                                            .item(0).getTextContent();
                                        if(!validFlightNumbers.contains(fn)){
                                            found = -1;
                                            break;
                                        }
                                        break;
                                    }
                                }
                                if(found&lt;0){
                                    break;
                                }

                            }
                            break;
                        }
                    }
                }
                // this should not happen.. FlightRef couldn&apos;t be found
                if(r==flightRefs.length){
                    r = new Random().nextInt(flightRefs.length);
                }
            }

            
            if(n.getAttribute(&quot;OriginDestinationKey&quot;).equals(&quot;OD1&quot;)){
                //this is the outbound ond.

                
                outBoundflightRef = flightRefs[r];

                departureAirportCode  = n.getElementsByTagName(&quot;DepartureCode&quot;)
                    .item(0).getTextContent();
                arrivalAirportCode  = n.getElementsByTagName(&quot;ArrivalCode&quot;)
                    .item(0).getTextContent();
            }else{
                // this is the inbound ond.
                
                inBoundflightRef = flightRefs[r];
            }
        }

        //save inbound/outbound flight references.
        vars.put(&quot;OutBoundFlightRef&quot;,outBoundflightRef);

        vars.put(&quot;OutBoundDepartureCode&quot;,departureAirportCode );
        vars.put(&quot;OutBoundArrivalCode&quot;,arrivalAirportCode);

        vars.put(&quot;InBoundFlightRef&quot;,inBoundflightRef);
        vars.put(&quot;InBoundDepartureCode&quot;,arrivalAirportCode );
        vars.put(&quot;InBoundArrivalCode&quot;,departureAirportCode);
                



        String flightListNodes = &quot;&quot;;


        for (i = 0; i &lt; flightNodes.getLength(); i++) {
            n = (Element) flightNodes.item(i);

            if(n.getAttribute(&quot;FlightKey&quot;).equals(outBoundflightRef)){

                    outBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                        .item(0).getTextContent().split(&quot;\\s+&quot;);	
            }else if (n.getAttribute(&quot;FlightKey&quot;).equals(inBoundflightRef)){
                inBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                    .item(0).getTextContent().split(&quot;\\s+&quot;);	

            }else{
                continue;
            }
            flightListNodes += domToXML(n);
        }

        // trim out redundant namespace attribute.
        vars.put(&quot;FlightListNodes&quot;,flightListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
        
        

        String outBoundSegmentListNodes = &quot;&quot;;
        String inBoundSegmentListNodes = &quot;&quot;;
        ArrayList outBoundSegmentList = new ArrayList();
        ArrayList inBoundSegmentList = new ArrayList();

        // extract inbound/outbound segment nodes and keys
        for (i = 0; i &lt; flightSegmentNodes.getLength(); i++) {
            n = (Element) flightSegmentNodes.item(i);
            for(int j=0; j&lt;outBoundSegRefsString.length; j++){

                if(outBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    outBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }

            }
			
            for(int j=0; j&lt;inBoundSegRefsString.length; j++){

                if(inBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    inBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }


            }

        }
        
        vars.put(&quot;FlightSegmentListNodes&quot;,
            outBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;) + &quot;\n&quot; +
            inBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));

     	
        String allSegmentRefs = &quot;&quot;;

        for(i=0; i&lt;inBoundSegRefsString.length-1; i++){
            allSegmentRefs += inBoundSegRefsString[i] +&quot; &quot;;
        }
        allSegmentRefs +=  inBoundSegRefsString[i] + &quot; &quot;;

        for(i=0; i&lt;outBoundSegRefsString.length-1; i++){
            allSegmentRefs += outBoundSegRefsString[i] + &quot; &quot;;
        }
        allSegmentRefs +=  outBoundSegRefsString[i];

        vars.put(&quot;AllSegmentRefs&quot;,allSegmentRefs);


        // Find the offer for the outbound Flight

        String outBoundOfferId = &quot;&quot;;
        String inBoundOfferId = &quot;&quot;;

        NodeList offersElements = doc.getDocumentElement()
            .getElementsByTagName(&quot;AirlineOffer&quot;);

        Element outBoundOfferElement = null;
        Element inBoundOfferElement = null;

        for(i=0; i&lt;offersElements.getLength(); i++){

            n = (Element)offersElements.item(i);
            String offerFlightRef = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent();

            if(offerFlightRef.equals(outBoundflightRef)){
                    outBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    outBoundOfferElement = n;
            }
            else if(offerFlightRef.equals(inBoundflightRef)){
                    inBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    inBoundOfferElement = n;
            }
        }

        vars.put(&quot;OutBoundOfferId&quot;,outBoundOfferId);
        vars.put(&quot;InBoundOfferId&quot;,inBoundOfferId);

        ///Construct OutBound-Offer Flights
        String flightsOutBound = &quot;&quot;;


        for(i=0; i&lt;outBoundSegmentList.size(); i++){

            Element el = (Element) outBoundSegmentList.get(i);
            flightsOutBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element) (el.getElementsByTagName(&quot;Departure&quot;)
                .item(0))).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();


            flightsOutBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; + departAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + departDate 
                + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;)
                .item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; + arrAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId+&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsOutBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;
            flightsOutBound += &quot;&lt;/Flight&gt;&quot;;
        }

        vars.put(&quot;flightsOutBound&quot;,flightsOutBound );  

        ///Construct InBound-Offer Flights
        String flightsInBound =&quot;&quot; ;
        for(i=0; i&lt;inBoundSegmentList.size(); i++){
            Element el = (Element) inBoundSegmentList.get(i);
            flightsInBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;).item(0))
                .getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();
            
            flightsInBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; 
                + departAirportCode+&quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; 
                + departDate + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; 
                + arrAirportCode + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId + &quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsInBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;

            flightsInBound += &quot;&lt;/Flight&gt;&quot;;
        }


        vars.put(&quot;flightsInBound&quot;,flightsInBound );  
        
        ///Construct fare detail for outbound
        int j;
        NodeList fareDetails = outBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);
        for(i=0; i&lt;fareDetails.getLength(); i++){
            n = (Element) fareDetails.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;).
                item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);
            
            for(j=0; j&lt;fareComponents.getLength(); j++){
                ((Element)fareComponents.item(j)).
                    getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
            }
            String flightDetailsString = &quot;&quot;;
            flightDetailsString+= domToXML(fareDetail);

            for(Object paxO: paxRefs){        
                String pax = (String)paxO;
                if(offerItemId.equals(outBoundOfferId+ &quot;#&quot; + pax)){
                    vars.put(&quot;OutBoundFareDetails&quot; 
                        + pax,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                    break;
                }
            }
        }

        ///Construct fare detail for inbound
        NodeList fareDetails1 = inBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);

        for(i=0; i&lt;fareDetails1.getLength(); i++){
            n = (Element) fareDetails1.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;)
                .item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);

            for(j=0; j&lt;fareComponents.getLength(); j++){
                Element el = (Element)fareComponents.item(j);
                if(el.getElementsByTagName(&quot;Remark&quot;).getLength()&gt;0){
                    el.getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
                }
            }

            String flightDetailsString = &quot;&quot;;
            flightDetailsString += domToXML(fareDetail);
            for(Object paxO: paxRefs){        
              String pax = (String)paxO;
              if(offerItemId.equals(inBoundOfferId + &quot;#&quot; + pax)){
                  vars.put(&quot;InBoundFareDetails&quot; 
                      + pax ,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                  break;
              }
            }
        }

        
        // Find total payment amount, by summing 
        // all &quot;TotalPrice&quot; values of InBound/Outbound Offers.    
        float payment = 0.0F;

        payment +=
        Float.parseFloat(
            ((Element)outBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        payment +=
        Float.parseFloat(
            ((Element)inBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        // sum service amounts.
        for(i=0; i&lt;serviceListNodes.getLength(); i++){
            n = (Element)serviceListNodes.item(i);

            float sprice= 
                Float.parseFloat(
                n.getElementsByTagName(&quot;Total&quot;).item(0).getTextContent());

            int numOfPassengers = n.getElementsByTagName(&quot;PassengerReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;).length;

            payment += sprice * numOfPassengers * (outBoundSegmentList.size()
                + inBoundSegmentList.size());

        }
        vars.put(&quot;payment&quot;, String.valueOf(payment));

    } catch (Exception ex) {
        IsSuccess = false;
        log.error(ex.getMessage());
        ex.printStackTrace();
    }


    </stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Valid Response" enabled="false">
            <stringProp name="IfController.condition">${getErrorsAndWarnings}==0</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCreateRQ RoundTrip ADT CHD" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;edis:OrderCreateRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-2OND&quot; TimeStamp=&quot;${timestamp}&quot; Version=&quot;IATA2016.2&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xd;
xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;JRT UNISYS GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Passengers&gt;&#xd;
			&lt;Passenger ObjectKey=&quot;ADT1&quot;&gt;&#xd;
				&lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
				&lt;Age&gt;&#xd;
					&lt;BirthDate&gt;1980-03-06&lt;/BirthDate&gt;&#xd;
				&lt;/Age&gt;&#xd;
				&lt;Name&gt;&#xd;
					&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
					&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
					&lt;Middle&gt;Edward&lt;/Middle&gt;&#xd;
				&lt;/Name&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;jaffa@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
			&lt;Passenger ObjectKey=&quot;CHD1&quot;&gt;&#xd;
				&lt;PTC Quantity=&quot;1&quot;&gt;CHD&lt;/PTC&gt;&#xd;
				&lt;Age&gt;&#xd;
					&lt;BirthDate&gt;2013-03-06&lt;/BirthDate&gt;&#xd;
				&lt;/Age&gt;&#xd;
				&lt;Name&gt;&#xd;
					&lt;Surname&gt;Kumar&lt;/Surname&gt;&#xd;
					&lt;Given&gt;Mithal&lt;/Given&gt;&#xd;
					&lt;Middle&gt;Savan&lt;/Middle&gt;&#xd;
				&lt;/Name&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;kumar@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/Passengers&gt;&#xd;
		&lt;OrderItems&gt;&#xd;
			&lt;ShoppingResponse&gt;&#xd;
				&lt;Owner&gt;NW&lt;/Owner&gt;&#xd;
				&lt;ResponseID&gt;${getResponseID}&lt;/ResponseID&gt;&#xd;
				&lt;Offers&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}#CHD1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;CHD1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;${InBoundOfferId}&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;${InBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD2&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;${InBoundOfferId}#CHD1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;CHD1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD2&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
				&lt;/Offers&gt;&#xd;
			&lt;/ShoppingResponse&gt;&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							${flightsOutBound}&#xd;
						&lt;/OriginDestination&gt;&#xd;
						&#xd;
							${OutBoundFareDetailsADT1}&#xd;
						&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}#CHD1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							${flightsOutBound}&#xd;
						&lt;/OriginDestination&gt;&#xd;
&#xd;
							${OutBoundFareDetailsCHD1}&#xd;
&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
		&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;${InBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							${flightsInBound}&#xd;
						&lt;/OriginDestination&gt;&#xd;
						${InBoundFareDetailsADT1}&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;${InBoundOfferId}#CHD1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							${flightsInBound}&#xd;
						&lt;/OriginDestination&gt;&#xd;
						${InBoundFareDetailsCHD1}&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
			&#xd;
		&lt;/OrderItems&gt;&#xd;
		&lt;Payments&gt;&#xd;
			&lt;Payment&gt;&#xd;
				&lt;Method&gt;&#xd;
					&lt;PaymentCard&gt;&#xd;
						&lt;CardType&gt;Visa&lt;/CardType&gt;&#xd;
						&lt;CardCode&gt;VI&lt;/CardCode&gt;&#xd;
						&lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
						&lt;SeriesCode&gt;584&lt;/SeriesCode&gt;&#xd;
						&lt;CardHolderName&gt;Patel Ramesh&lt;/CardHolderName&gt;&#xd;
								&lt;CardHolderBillingAddress&gt;&#xd;
									&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
									&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
									&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
									&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
								&lt;/CardHolderBillingAddress&gt;&#xd;
								&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${payment}&lt;/Amount&gt;&#xd;
								&lt;EffectiveExpireDate&gt;&#xd;
									&lt;Expiration&gt;0818&lt;/Expiration&gt;&#xd;
								&lt;/EffectiveExpireDate&gt;&#xd;
					&lt;/PaymentCard&gt;&#xd;
				&lt;/Method&gt;&#xd;
				&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${payment}&lt;/Amount&gt;&#xd;
				&lt;Payer&gt;&#xd;
					&lt;Name&gt;&#xd;
						&lt;Surname&gt;Kumar&lt;/Surname&gt;&#xd;
						&lt;Given&gt;Mithalesh&lt;/Given&gt;&#xd;
					&lt;/Name&gt;&#xd;
					&lt;Contacts&gt;&#xd;
						&lt;Contact&gt;&#xd;
							&lt;AddressContact&gt;&#xd;
								&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
								&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
								&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
								&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
							&lt;/AddressContact&gt;&#xd;
							&lt;EmailContact&gt;&#xd;
								&lt;Address&gt;ramesh@unisys.com&lt;/Address&gt;&#xd;
							&lt;/EmailContact&gt;&#xd;
						&lt;/Contact&gt;&#xd;
					&lt;/Contacts&gt;&#xd;
				&lt;/Payer&gt;&#xd;
			&lt;/Payment&gt;&#xd;
		&lt;/Payments&gt;&#xd;
		&lt;DataLists&gt;&#xd;
			&lt;edis:CarryOnAllowanceList&gt;&#xd;
				&lt;edis:CarryOnAllowance ListKey=&quot;AW1&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;5&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CarryOnAllowance&gt;&#xd;
			&lt;/edis:CarryOnAllowanceList&gt;&#xd;
			&lt;edis:CheckedBagAllowanceList&gt;&#xd;
				&lt;edis:CheckedBagAllowance ListKey=&quot;AW2&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;15&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;16&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;17&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;10&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CheckedBagAllowance&gt;&#xd;
			&lt;/edis:CheckedBagAllowanceList&gt;&#xd;
			&lt;FlightSegmentList&gt;&#xd;
				${FlightSegmentListNodes}&#xd;
			&lt;/FlightSegmentList&gt;&#xd;
			&lt;FlightList&gt;&#xd;
				${FlightListNodes}&#xd;
			&lt;/FlightList&gt;&#xd;
			&lt;OriginDestinationList&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${OutBoundDepartureCode}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${OutBoundArrivalCode}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;${OutBoundFlightRef}&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD2&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${OutBoundArrivalCode}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${OutBoundDepartureCode}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;${InBoundFlightRef}&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
			&lt;/OriginDestinationList&gt;&#xd;
			&lt;ServiceList&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;50&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Veg Meal&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;G&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0AP&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;Veg Meal&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;0.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1 CHD1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;OTHS&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;${AllSegmentRefs}&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV9&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;1026&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Excess Baggage&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;C&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0CC&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;EXCESS BAGGAGE&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;25.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1 CHD1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;XBAG&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;${AllSegmentRefs}&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
						&lt;OtherAssociations&gt;&#xd;
							&lt;OtherAssociation&gt;&#xd;
								&lt;Type&gt;CARRY&lt;/Type&gt;&#xd;
								&lt;ReferenceValue&gt;AW1&lt;/ReferenceValue&gt;&#xd;
							&lt;/OtherAssociation&gt;&#xd;
						&lt;/OtherAssociations&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
			&lt;/ServiceList&gt;&#xd;
		&lt;/DataLists&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/edis:OrderCreateRQ&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Else" enabled="false">
          <stringProp name="IfController.condition">${chd_number}==0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="isRoundTrip" enabled="true">
            <stringProp name="IfController.condition">${bound_nbr}&gt;1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirShoppingRQ RoundTrip ADT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;EchoToken&quot;: &quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-2OND&quot;,&#xd;
	&quot;RecaptchaResponse&quot;: &quot;dummy&quot;,&#xd;
	&quot;MsgType&quot;: &quot;AirShopping&quot;,&#xd;
	&quot;Parameters&quot;: {&#xd;
		&quot;Languages&quot;: [&quot;en&quot;],&#xd;
		&quot;CurrencyCodes&quot;: [&quot;USD&quot;]&#xd;
	},&#xd;
	&quot;OriginDestinations&quot;: [{&#xd;
			&quot;Departure&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${origin}&quot;,&#xd;
				&quot;Date&quot;: &quot;${start}&quot;&#xd;
			},&#xd;
			&quot;Arrival&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${destination}&quot;&#xd;
			}&#xd;
		},&#xd;
		{&#xd;
			&quot;Departure&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${destination}&quot;,&#xd;
				&quot;Date&quot;: &quot;${returnDate}&quot;&#xd;
			},&#xd;
			&quot;Arrival&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${origin}&quot;&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;AnonymousTraveler&quot;: [{&#xd;
			&quot;PTC&quot;: &quot;ADT&quot;,&#xd;
			&quot;Quantity&quot;: ${adt_number}&#xd;
		}&#xd;
	],&#xd;
	&quot;Metadata&quot;: {&#xd;
		&quot;LanguageMetadata&quot;: {&#xd;
			&quot;Display&quot;: &quot;en&quot;&#xd;
		}&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">application-auth</stringProp>
                    <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MDM3YzAyZS0yOTViLTQxMTQtYjMzMS0yNGY0YTA0NmI1OWIiLCJuYW1lIjoiODJkYzA1ZTMtNTg2OS00ODg3LTljMGUtYzExMWRhYjVhNDExIn0.jRHDyM-oj4U4z393x7Tql_yA36UScN1CeWGJndpuang</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${Authorization}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);





</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getResponseID" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getResponseID</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/ShoppingResponseID/ResponseID</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPriceGuaranteeTimeLimit" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getPriceGuaranteeTimeLimit</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/PriceGuaranteeTimeLimit/@Timestamp</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getTicketBy" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getTicketBy</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/TicketByTimeLimit/TicketBy</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPayment" enabled="false">
                <stringProp name="XPathExtractor.default">0</stringProp>
                <stringProp name="XPathExtractor.refname">getPayment</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">sum(/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/Taxes/Total | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/BaseAmount | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[8]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/Taxes/Total | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[8]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/BaseAmount)+ 25*3*(${adt_number} + ${chd_number}) </stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <stringProp name="TestPlan.comments">${__doubleSum(${getBaseAmountSEG1ADT1}, ${getTaxAmountSEG1ADT1},${getBaseAmountSEG1CHD1},${getTaxAmountSEG1CHD1} )}</stringProp>
              </XPathExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.io.*;
import javax.xml.parsers.*;
import java.util.Arrays;
import org.w3c.dom.*;
import org.xml.sax.SAXException;
import org.xml.sax.InputSource;
import org.apache.jmeter.samplers.SampleResult;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.NodeList;
import org.w3c.dom.Document;
import javBeax.xml.xpath.XPathConstants;
import javBeax.xml.xpath.XPathConstants.NODESET;
import javax.xml.namespace.NamespaceContext;
import java.util.Random;
import java.util.ArrayList;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.dom.DOMSource;


String domToXML(Node n){ 
    TransformerFactory tFactory = TransformerFactory.newInstance();
    Transformer transformer = tFactory.newTransformer();
    transformer.setOutputProperty(&quot;indent&quot;, &quot;yes&quot;);
    StringWriter sw = new StringWriter();
    StreamResult result = new StreamResult(sw);
    DOMSource source = new DOMSource(n);
    transformer.transform(source, result);
    return sw.toString();

}
    
try {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);
        DocumentBuilder builder = domFactory.newDocumentBuilder();



        // access result of parent sampler via &quot;ctx&quot; BeanShell variable        
        SampleResult result = ctx.getPreviousResult();

        InputSource is = new InputSource(new StringReader(result.getResponseDataAsString()));

        //Construct a dom Document to access airshopping rs
        Document doc = builder.parse(is);


        // Extract global variable nodes and elements
        Element dataListElement =(Element) doc.getDocumentElement().getElementsByTagName(&quot;DataLists&quot;).item(0);
        NodeList ondNodes = (NodeList) dataListElement.getElementsByTagName(&quot;OriginDestination&quot;);
        NodeList travelersList = dataListElement.getElementsByTagName(&quot;AnonymousTraveler&quot;);
        NodeList flightNodes  = ((Element) (dataListElement.getElementsByTagName(&quot;FlightList&quot;).item(0))).getElementsByTagName(&quot;Flight&quot;);
        NodeList serviceListNodes = ((Element)dataListElement.getElementsByTagName(&quot;ServiceList&quot;).item(0)).getElementsByTagName(&quot;Service&quot;);
        NodeList flightSegmentNodes  = dataListElement.getElementsByTagName(&quot;FlightSegment&quot;);
        

        int i=0;
        Element n = null;
        ArrayList paxRefs = new ArrayList();

        // Extract all travelers and store travelers objectkey.
        for(i=0; i&lt;travelersList.getLength(); i++){
            Element el = (Element) travelersList.item(i);
            paxRefs.add(el.getAttribute(&quot;ObjectKey&quot;));
        }



        String outBoundflightRef = &quot;&quot;;
        String inBoundflightRef = &quot;&quot;;
        String[] outBoundSegRefsString = null;
        String[] inBoundSegRefsString = null;

        String departureAirportCode = &quot;&quot;;
        String arrivalAirportCode = &quot;&quot;;
        
        
        
        //******** The following lines, find and store the outbound/inbound flights.
        // We include only the flights with flightNumber stored in &quot;valid_flight_numbers&quot;
        // variable.
        

        //iterate all onds.
        for (i = 0; i &lt; ondNodes.getLength(); i++) {
            n = (Element) ondNodes.item(i);

            // find the flightReference of the onde (1 Flight per ond)
            String[] flightRefs = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;);		
            
            
            int r = 0;
            // if &quot;valid_flight_numbers&quot; is not set, just choose a random flight.
            if(vars.get(&quot;valid_flight_numbers&quot;)==null)
                r = new Random().nextInt(flightRefs.length);
            
            else{
                List validFlightNumbers = Arrays
                    .asList(vars.get(&quot;valid_flight_numbers&quot;).split(&quot;\\,&quot;));
                
                
                int found =0;

                //iterate all flight options
                for(r=0; r&lt;flightRefs.length; r++){
                    if(found&gt;0){
                        r--;
                        break;
                    }
                    String f = flightRefs[r];
                    //iterate all flight nodes to find the specific flight node.
                    for (int k = 0; k &lt; flightNodes.getLength(); k++) {
                        Element nn = (Element) flightNodes.item(k);
                        if(nn.getAttribute(&quot;FlightKey&quot;).equals(f)){ 
                            String[] segs = nn.getElementsByTagName(&quot;SegmentReferences&quot;)
                                .item(0).getTextContent().split(&quot;\\s+&quot;);	


                            //iterate all segment of the specific flight
                            found =1;
                            for(String ss: segs){
                                //iterate all flight segment nodes to find the specific segment
                                for(int m=0; m&lt;flightSegmentNodes.getLength(); m++){
                                    Element nnn = (Element)flightSegmentNodes.item(m);
                                    if(nnn.getAttribute(&quot;SegmentKey&quot;).equals(ss)){
                                        String fn = nnn.getElementsByTagName(&quot;FlightNumber&quot;)
                                            .item(0).getTextContent();
                                        if(!validFlightNumbers.contains(fn)){
                                            found = -1;
                                            break;
                                        }
                                        break;
                                    }
                                }
                                if(found&lt;0){
                                    break;
                                }

                            }
                            break;
                        }
                    }
                }
                // this should not happen.. FlightRef couldn&apos;t be found
                if(r==flightRefs.length){
                    r = new Random().nextInt(flightRefs.length);
                }
            }

            
            if(n.getAttribute(&quot;OriginDestinationKey&quot;).equals(&quot;OD1&quot;)){
                //this is the outbound ond.

                
                outBoundflightRef = flightRefs[r];

                departureAirportCode  = n.getElementsByTagName(&quot;DepartureCode&quot;)
                    .item(0).getTextContent();
                arrivalAirportCode  = n.getElementsByTagName(&quot;ArrivalCode&quot;)
                    .item(0).getTextContent();
            }else{
                // this is the inbound ond.
                
                inBoundflightRef = flightRefs[r];
            }
        }

        //save inbound/outbound flight references.
        vars.put(&quot;OutBoundFlightRef&quot;,outBoundflightRef);
        vars.put(&quot;OutBoundDepartureCode&quot;,departureAirportCode );
        vars.put(&quot;OutBoundArrivalCode&quot;,arrivalAirportCode);

        vars.put(&quot;InBoundFlightRef&quot;,inBoundflightRef);
        vars.put(&quot;InBoundDepartureCode&quot;,arrivalAirportCode );
        vars.put(&quot;InBoundArrivalCode&quot;,departureAirportCode);



        String flightListNodes = &quot;&quot;;


        for (i = 0; i &lt; flightNodes.getLength(); i++) {
            n = (Element) flightNodes.item(i);

            if(n.getAttribute(&quot;FlightKey&quot;).equals(outBoundflightRef)){

                    outBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                        .item(0).getTextContent().split(&quot;\\s+&quot;);	
            }else if (n.getAttribute(&quot;FlightKey&quot;).equals(inBoundflightRef)){
                inBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                    .item(0).getTextContent().split(&quot;\\s+&quot;);	

            }else{
                continue;
            }
            flightListNodes += domToXML(n);
        }

        // trim out redundant namespace attribute.
        vars.put(&quot;FlightListNodes&quot;,flightListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
        
        

        String outBoundSegmentListNodes = &quot;&quot;;
        String inBoundSegmentListNodes = &quot;&quot;;
        ArrayList outBoundSegmentList = new ArrayList();
        ArrayList inBoundSegmentList = new ArrayList();

        // extract inbound/outbound segment nodes and keys
        for (i = 0; i &lt; flightSegmentNodes.getLength(); i++) {
            n = (Element) flightSegmentNodes.item(i);
            for(int j=0; j&lt;outBoundSegRefsString.length; j++){

                if(outBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    outBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }

            }

            for(int j=0; j&lt;inBoundSegRefsString.length; j++){

                if(inBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    inBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }


            }


        }
        vars.put(&quot;FlightSegmentListNodes&quot;,
            outBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;) + &quot;\n&quot; +
            inBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));


        String allSegmentRefs = &quot;&quot;;

        for(i=0; i&lt;inBoundSegRefsString.length-1; i++){
            allSegmentRefs += inBoundSegRefsString[i] +&quot; &quot;;
        }
        allSegmentRefs +=  inBoundSegRefsString[i] + &quot; &quot;;

        for(i=0; i&lt;outBoundSegRefsString.length-1; i++){
            allSegmentRefs += outBoundSegRefsString[i] + &quot; &quot;;
        }
        allSegmentRefs +=  outBoundSegRefsString[i];

        vars.put(&quot;AllSegmentRefs&quot;,allSegmentRefs);


        // Find the offer for the outbound Flight

        String outBoundOfferId = &quot;&quot;;
        String inBoundOfferId = &quot;&quot;;

        NodeList offersElements = doc.getDocumentElement()
            .getElementsByTagName(&quot;AirlineOffer&quot;);

        Element outBoundOfferElement = null;
        Element inBoundOfferElement = null;

        for(i=0; i&lt;offersElements.getLength(); i++){

            n = (Element)offersElements.item(i);
            String offerFlightRef = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent();

            if(offerFlightRef.equals(outBoundflightRef)){
                    outBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    outBoundOfferElement = n;
            }
            else if(offerFlightRef.equals(inBoundflightRef)){
                    inBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    inBoundOfferElement = n;
            }
        }

        vars.put(&quot;OutBoundOfferId&quot;,outBoundOfferId);
        vars.put(&quot;InBoundOfferId&quot;,inBoundOfferId);

        ///Construct OutBound-Offer Flights
        String flightsOutBound = &quot;&quot;;


        for(i=0; i&lt;outBoundSegmentList.size(); i++){

            Element el = (Element) outBoundSegmentList.get(i);
            flightsOutBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element) (el.getElementsByTagName(&quot;Departure&quot;)
                .item(0))).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();


            flightsOutBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; + departAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + departDate 
                + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;)
                .item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; + arrAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId+&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsOutBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;
            flightsOutBound += &quot;&lt;/Flight&gt;&quot;;
        }

        vars.put(&quot;flightsOutBound&quot;,flightsOutBound );  

        ///Construct InBound-Offer Flights
        String flightsInBound =&quot;&quot; ;
        for(i=0; i&lt;inBoundSegmentList.size(); i++){
            Element el = (Element) inBoundSegmentList.get(i);
            flightsInBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;).item(0))
                .getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();
            
            flightsInBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; 
                + departAirportCode+&quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; 
                + departDate + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; 
                + arrAirportCode + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId + &quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsInBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;

            flightsInBound += &quot;&lt;/Flight&gt;&quot;;
        }


        vars.put(&quot;flightsInBound&quot;,flightsInBound );  
        
        ///Construct fare detail for outbound
        int j;
        NodeList fareDetails = outBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);
        for(i=0; i&lt;fareDetails.getLength(); i++){
            n = (Element) fareDetails.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;).
                item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);
            
            for(j=0; j&lt;fareComponents.getLength(); j++){
                ((Element)fareComponents.item(j)).
                    getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
            }
            String flightDetailsString = &quot;&quot;;
            flightDetailsString+= domToXML(fareDetail);

            for(Object paxO: paxRefs){        
                String pax = (String)paxO;
                if(offerItemId.equals(outBoundOfferId+ &quot;#&quot; + pax)){
                    vars.put(&quot;OutBoundFareDetails&quot; 
                        + pax,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                    break;
                }
            }
        }

        ///Construct fare detail for inbound
        NodeList fareDetails1 = inBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);

        for(i=0; i&lt;fareDetails1.getLength(); i++){
            n = (Element) fareDetails1.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;)
                .item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);

            for(j=0; j&lt;fareComponents.getLength(); j++){
                Element el = (Element)fareComponents.item(j);
                if(el.getElementsByTagName(&quot;Remark&quot;).getLength()&gt;0){
                    el.getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
                }
            }

            String flightDetailsString = &quot;&quot;;
            flightDetailsString += domToXML(fareDetail);
            for(Object paxO: paxRefs){        
              String pax = (String)paxO;
              if(offerItemId.equals(inBoundOfferId + &quot;#&quot; + pax)){
                  vars.put(&quot;InBoundFareDetails&quot; 
                      + pax ,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                  break;
              }
            }
        }

        
        // Find total payment amount, by summing 
        // all &quot;TotalPrice&quot; values of InBound/Outbound Offers.    
        float payment = 0.0F;

        payment +=
        Float.parseFloat(
            ((Element)outBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        payment +=
        Float.parseFloat(
            ((Element)inBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        // sum service amounts.
        for(i=0; i&lt;serviceListNodes.getLength(); i++){
            n = (Element)serviceListNodes.item(i);

            float sprice= 
                Float.parseFloat(
                n.getElementsByTagName(&quot;Total&quot;).item(0).getTextContent());

            int numOfPassengers = n.getElementsByTagName(&quot;PassengerReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;).length;

            payment += sprice * numOfPassengers * (outBoundSegmentList.size()
                + inBoundSegmentList.size());

        }
        vars.put(&quot;payment&quot;, String.valueOf(payment));

    } catch (Exception ex) {
        IsSuccess = false;
        log.error(ex.getMessage());
        ex.printStackTrace();
    }


    </stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getErrorsAndWarnings" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getErrorsAndWarnings</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">count(/AirShoppingRS/Warnings|/AirShoppingRS/Errors)</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Else" enabled="true">
            <stringProp name="IfController.condition">${bound_nbr}==1</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirShoppingRQ OneWay ADT" enabled="true">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
	&quot;EchoToken&quot;: &quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-2OND&quot;,&#xd;
	&quot;RecaptchaResponse&quot;: &quot;dummy&quot;,&#xd;
	&quot;MsgType&quot;: &quot;AirShopping&quot;,&#xd;
	&quot;Parameters&quot;: {&#xd;
		&quot;Languages&quot;: [&quot;en&quot;],&#xd;
		&quot;CurrencyCodes&quot;: [&quot;USD&quot;]&#xd;
	},&#xd;
	&quot;OriginDestinations&quot;: [{&#xd;
			&quot;Departure&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${origin}&quot;,&#xd;
				&quot;Date&quot;: &quot;${start}&quot;&#xd;
			},&#xd;
			&quot;Arrival&quot;: {&#xd;
				&quot;AirportCode&quot;: &quot;${destination}&quot;&#xd;
			}&#xd;
		}&#xd;
	],&#xd;
	&quot;AnonymousTraveler&quot;: [{&#xd;
			&quot;PTC&quot;: &quot;ADT&quot;,&#xd;
			&quot;Quantity&quot;: ${adt_number}&#xd;
		}&#xd;
	],&#xd;
	&quot;Metadata&quot;: {&#xd;
		&quot;LanguageMetadata&quot;: {&#xd;
			&quot;Display&quot;: &quot;en&quot;&#xd;
		}&#xd;
	}&#xd;
}&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">application-auth</stringProp>
                    <stringProp name="Header.value">eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI0MDM3YzAyZS0yOTViLTQxMTQtYjMzMS0yNGY0YTA0NmI1OWIiLCJuYW1lIjoiODJkYzA1ZTMtNTg2OS00ODg3LTljMGUtYzExMWRhYjVhNDExIn0.jRHDyM-oj4U4z393x7Tql_yA36UScN1CeWGJndpuang</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">${Authorization}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="true">
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);





</stringProp>
              </BeanShellPreProcessor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getResponseID" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getResponseID</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/ShoppingResponseID/ResponseID</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPriceGuaranteeTimeLimit" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getPriceGuaranteeTimeLimit</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/PriceGuaranteeTimeLimit/@Timestamp</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getTicketBy" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getTicketBy</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/TicketByTimeLimit/TicketBy</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPayment" enabled="false">
                <stringProp name="XPathExtractor.default">0</stringProp>
                <stringProp name="XPathExtractor.refname">getPayment</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">sum(/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/Taxes/Total | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/BaseAmount | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[8]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/Taxes/Total | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[8]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/BaseAmount)+ 25*3*(${adt_number} + ${chd_number}) </stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
                <stringProp name="TestPlan.comments">${__doubleSum(${getBaseAmountSEG1ADT1}, ${getTaxAmountSEG1ADT1},${getBaseAmountSEG1CHD1},${getTaxAmountSEG1CHD1} )}</stringProp>
              </XPathExtractor>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">import java.io.*;
import javax.xml.parsers.*;
import java.util.Arrays;
import org.w3c.dom.*;
import org.xml.sax.SAXException;
import org.xml.sax.InputSource;
import org.apache.jmeter.samplers.SampleResult;
import java.io.StringReader;
import java.io.StringWriter;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.NodeList;
import org.w3c.dom.Document;
import javBeax.xml.xpath.XPathConstants;
import javBeax.xml.xpath.XPathConstants.NODESET;
import javax.xml.namespace.NamespaceContext;
import java.util.Random;
import java.util.ArrayList;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.Transformer;
import javax.xml.transform.dom.DOMSource;


String domToXML(Node n){ 
    TransformerFactory tFactory = TransformerFactory.newInstance();
    Transformer transformer = tFactory.newTransformer();
    transformer.setOutputProperty(&quot;indent&quot;, &quot;yes&quot;);
    StringWriter sw = new StringWriter();
    StreamResult result = new StreamResult(sw);
    DOMSource source = new DOMSource(n);
    transformer.transform(source, result);
    return sw.toString();

}
    
try {
        DocumentBuilderFactory domFactory = DocumentBuilderFactory.newInstance();
        domFactory.setNamespaceAware(true);
        DocumentBuilder builder = domFactory.newDocumentBuilder();



        // access result of parent sampler via &quot;ctx&quot; BeanShell variable        
        SampleResult result = ctx.getPreviousResult();

        InputSource is = new InputSource(new StringReader(result.getResponseDataAsString()));

        //Construct a dom Document to access airshopping rs
        Document doc = builder.parse(is);


        // Extract global variable nodes and elements
        Element dataListElement =(Element) doc.getDocumentElement().getElementsByTagName(&quot;DataLists&quot;).item(0);
        NodeList ondNodes = (NodeList) dataListElement.getElementsByTagName(&quot;OriginDestination&quot;);
        NodeList travelersList = dataListElement.getElementsByTagName(&quot;AnonymousTraveler&quot;);
        NodeList flightNodes  = ((Element) (dataListElement.getElementsByTagName(&quot;FlightList&quot;).item(0))).getElementsByTagName(&quot;Flight&quot;);
        NodeList serviceListNodes = ((Element)dataListElement.getElementsByTagName(&quot;ServiceList&quot;).item(0)).getElementsByTagName(&quot;Service&quot;);
        NodeList flightSegmentNodes  = dataListElement.getElementsByTagName(&quot;FlightSegment&quot;);
        

        int i=0;
        Element n = null;
        ArrayList paxRefs = new ArrayList();

        // Extract all travelers and store travelers objectkey.
        for(i=0; i&lt;travelersList.getLength(); i++){
            Element el = (Element) travelersList.item(i);
            paxRefs.add(el.getAttribute(&quot;ObjectKey&quot;));
        }



        String outBoundflightRef = &quot;&quot;;
        String inBoundflightRef = &quot;&quot;;
        String[] outBoundSegRefsString = null;
        String[] inBoundSegRefsString = null;

        String departureAirportCode = &quot;&quot;;
        String arrivalAirportCode = &quot;&quot;;
        
        
        
        //******** The following lines, find and store the outbound/inbound flights.
        // We include only the flights with flightNumber stored in &quot;valid_flight_numbers&quot;
        // variable.
        

        //iterate all onds.
        for (i = 0; i &lt; ondNodes.getLength(); i++) {
            n = (Element) ondNodes.item(i);

            // find the flightReference of the onde (1 Flight per ond)
            String[] flightRefs = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;);		
            
            
            int r = 0;
            // if &quot;valid_flight_numbers&quot; is not set, just choose a random flight.
            if(vars.get(&quot;valid_flight_numbers&quot;)==null)
                r = new Random().nextInt(flightRefs.length);
            
            else{
                List validFlightNumbers = Arrays
                    .asList(vars.get(&quot;valid_flight_numbers&quot;).split(&quot;\\,&quot;));
                
                
                int found =0;

                //iterate all flight options
                for(r=0; r&lt;flightRefs.length; r++){
                    if(found&gt;0){
                        r--;
                        break;
                    }
                    String f = flightRefs[r];
                    //iterate all flight nodes to find the specific flight node.
                    for (int k = 0; k &lt; flightNodes.getLength(); k++) {
                        Element nn = (Element) flightNodes.item(k);
                        if(nn.getAttribute(&quot;FlightKey&quot;).equals(f)){ 
                            String[] segs = nn.getElementsByTagName(&quot;SegmentReferences&quot;)
                                .item(0).getTextContent().split(&quot;\\s+&quot;);	


                            //iterate all segment of the specific flight
                            found =1;
                            for(String ss: segs){
                                //iterate all flight segment nodes to find the specific segment
                                for(int m=0; m&lt;flightSegmentNodes.getLength(); m++){
                                    Element nnn = (Element)flightSegmentNodes.item(m);
                                    if(nnn.getAttribute(&quot;SegmentKey&quot;).equals(ss)){
                                        String fn = nnn.getElementsByTagName(&quot;FlightNumber&quot;)
                                            .item(0).getTextContent();
                                        if(!validFlightNumbers.contains(fn)){
                                            found = -1;
                                            break;
                                        }
                                        break;
                                    }
                                }
                                if(found&lt;0){
                                    break;
                                }

                            }
                            break;
                        }
                    }
                }
                // this should not happen.. FlightRef couldn&apos;t be found
                if(r==flightRefs.length){
                    r = new Random().nextInt(flightRefs.length);
                }
            }

            
            if(n.getAttribute(&quot;OriginDestinationKey&quot;).equals(&quot;OD1&quot;)){
                //this is the outbound ond.

                
                outBoundflightRef = flightRefs[r];

                departureAirportCode  = n.getElementsByTagName(&quot;DepartureCode&quot;)
                    .item(0).getTextContent();
                arrivalAirportCode  = n.getElementsByTagName(&quot;ArrivalCode&quot;)
                    .item(0).getTextContent();
            }else{
                // this is the inbound ond.
                
                inBoundflightRef = flightRefs[r];
            }
        }

        //save inbound/outbound flight references.
        vars.put(&quot;OutBoundFlightRef&quot;,outBoundflightRef);
        vars.put(&quot;OutBoundDepartureCode&quot;,departureAirportCode );
        vars.put(&quot;OutBoundArrivalCode&quot;,arrivalAirportCode);

        vars.put(&quot;InBoundFlightRef&quot;,inBoundflightRef);
        vars.put(&quot;InBoundDepartureCode&quot;,arrivalAirportCode );
        vars.put(&quot;InBoundArrivalCode&quot;,departureAirportCode);



        String flightListNodes = &quot;&quot;;


        for (i = 0; i &lt; flightNodes.getLength(); i++) {
            n = (Element) flightNodes.item(i);

            if(n.getAttribute(&quot;FlightKey&quot;).equals(outBoundflightRef)){

                    outBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                        .item(0).getTextContent().split(&quot;\\s+&quot;);	
            }else if (n.getAttribute(&quot;FlightKey&quot;).equals(inBoundflightRef)){
                inBoundSegRefsString = n.getElementsByTagName(&quot;SegmentReferences&quot;)
                    .item(0).getTextContent().split(&quot;\\s+&quot;);	

            }else{
                continue;
            }
            flightListNodes += domToXML(n);
        }

        // trim out redundant namespace attribute.
        vars.put(&quot;FlightListNodes&quot;,flightListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
        
        

        String outBoundSegmentListNodes = &quot;&quot;;
        String inBoundSegmentListNodes = &quot;&quot;;
        ArrayList outBoundSegmentList = new ArrayList();
        ArrayList inBoundSegmentList = new ArrayList();

        // extract inbound/outbound segment nodes and keys
        for (i = 0; i &lt; flightSegmentNodes.getLength(); i++) {
            n = (Element) flightSegmentNodes.item(i);
            for(int j=0; j&lt;outBoundSegRefsString.length; j++){

                if(outBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    outBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }

            }

            for(int j=0; j&lt;inBoundSegRefsString.length; j++){

                if(inBoundSegRefsString[j].equals(n.getAttribute(&quot;SegmentKey&quot;))){
                    inBoundSegmentList.add(n);
                    outBoundSegmentListNodes += domToXML(n);
                    break;
                }


            }


        }
        vars.put(&quot;FlightSegmentListNodes&quot;,
            outBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;) + &quot;\n&quot; +
            inBoundSegmentListNodes.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));


        String allSegmentRefs = &quot;&quot;;

        for(i=0; i&lt;inBoundSegRefsString.length-1; i++){
            allSegmentRefs += inBoundSegRefsString[i] +&quot; &quot;;
        }
        allSegmentRefs +=  inBoundSegRefsString[i] + &quot; &quot;;

        for(i=0; i&lt;outBoundSegRefsString.length-1; i++){
            allSegmentRefs += outBoundSegRefsString[i] + &quot; &quot;;
        }
        allSegmentRefs +=  outBoundSegRefsString[i];

        vars.put(&quot;AllSegmentRefs&quot;,allSegmentRefs);


        // Find the offer for the outbound Flight

        String outBoundOfferId = &quot;&quot;;
        String inBoundOfferId = &quot;&quot;;

        NodeList offersElements = doc.getDocumentElement()
            .getElementsByTagName(&quot;AirlineOffer&quot;);

        Element outBoundOfferElement = null;
        Element inBoundOfferElement = null;

        for(i=0; i&lt;offersElements.getLength(); i++){

            n = (Element)offersElements.item(i);
            String offerFlightRef = n.getElementsByTagName(&quot;FlightReferences&quot;)
                .item(0).getTextContent();

            if(offerFlightRef.equals(outBoundflightRef)){
                    outBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    outBoundOfferElement = n;
            }
            else if(offerFlightRef.equals(inBoundflightRef)){
                    inBoundOfferId = 	n.getElementsByTagName(&quot;OfferID&quot;)
                        .item(0).getTextContent();
                    inBoundOfferElement = n;
            }
        }

        vars.put(&quot;OutBoundOfferId&quot;,outBoundOfferId);
        vars.put(&quot;InBoundOfferId&quot;,inBoundOfferId);

        ///Construct OutBound-Offer Flights
        String flightsOutBound = &quot;&quot;;


        for(i=0; i&lt;outBoundSegmentList.size(); i++){

            Element el = (Element) outBoundSegmentList.get(i);
            flightsOutBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element) (el.getElementsByTagName(&quot;Departure&quot;)
                .item(0))).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;)
                .item(0)).getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();


            flightsOutBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; + departAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + departDate 
                + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;)
                .item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; + arrAirportCode 
                + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;)
                .item(0)).getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsOutBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId+&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsOutBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN+&quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;
            flightsOutBound += &quot;&lt;/Flight&gt;&quot;;
        }

        vars.put(&quot;flightsOutBound&quot;,flightsOutBound );  

        ///Construct InBound-Offer Flights
        String flightsInBound =&quot;&quot; ;
        for(i=0; i&lt;inBoundSegmentList.size(); i++){
            Element el = (Element) inBoundSegmentList.get(i);
            flightsInBound += &quot;&lt;Flight&gt;&quot;;

            String departAirportCode = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            String departDate = ((Element)el.getElementsByTagName(&quot;Departure&quot;).
                item(0)).getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();
            String departTime = ((Element)el.getElementsByTagName(&quot;Departure&quot;).item(0))
                .getElementsByTagName(&quot;Time&quot;).item(0).getTextContent();
            
            flightsInBound += &quot;&lt;Departure&gt;&lt;AirportCode&gt;&quot; 
                + departAirportCode+&quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; 
                + departDate + &quot;&lt;/Date&gt;&lt;Time&gt;&quot; + departTime + &quot;&lt;/Time&gt;&lt;/Departure&gt;&quot;;


            String arrAirportCode = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;AirportCode&quot;).item(0).getTextContent();
            
            String arrDate = ((Element)el.getElementsByTagName(&quot;Arrival&quot;).item(0))
                .getElementsByTagName(&quot;Date&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;Arrival&gt;&lt;AirportCode&gt;&quot; 
                + arrAirportCode + &quot;&lt;/AirportCode&gt;&lt;Date&gt;&quot; + arrDate + &quot;&lt;/Date&gt;&lt;/Arrival&gt;&quot;;


            String markCarrierId = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).
                item(0)).getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String markCarrierFN = ((Element)el.getElementsByTagName(&quot;MarketingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            String operCarrierId = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;AirlineID&quot;).item(0).getTextContent();
            
            String operCarrierFN = ((Element)el.getElementsByTagName(&quot;OperatingCarrier&quot;).item(0))
                .getElementsByTagName(&quot;FlightNumber&quot;).item(0).getTextContent();

            flightsInBound += &quot;&lt;MarketingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + markCarrierId + &quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + markCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/MarketingCarrier&gt;&quot;;
            
            flightsInBound += &quot;&lt;OperatingCarrier&gt;&lt;AirlineID&gt;&quot; 
                + operCarrierId +&quot;&lt;/AirlineID&gt;&lt;FlightNumber&gt;&quot; 
                + operCarrierFN + &quot;&lt;/FlightNumber&gt;&lt;/OperatingCarrier&gt;&quot;;

            flightsInBound += &quot;&lt;/Flight&gt;&quot;;
        }


        vars.put(&quot;flightsInBound&quot;,flightsInBound );  
        
        ///Construct fare detail for outbound
        int j;
        NodeList fareDetails = outBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);
        for(i=0; i&lt;fareDetails.getLength(); i++){
            n = (Element) fareDetails.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;).
                item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);
            
            for(j=0; j&lt;fareComponents.getLength(); j++){
                ((Element)fareComponents.item(j)).
                    getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
            }
            String flightDetailsString = &quot;&quot;;
            flightDetailsString+= domToXML(fareDetail);

            for(Object paxO: paxRefs){        
                String pax = (String)paxO;
                if(offerItemId.equals(outBoundOfferId+ &quot;#&quot; + pax)){
                    vars.put(&quot;OutBoundFareDetails&quot; 
                        + pax,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                    break;
                }
            }
        }

        ///Construct fare detail for inbound
        NodeList fareDetails1 = inBoundOfferElement.getElementsByTagName(&quot;OfferPrice&quot;);

        for(i=0; i&lt;fareDetails1.getLength(); i++){
            n = (Element) fareDetails1.item(i);
            String offerItemId = n.getAttribute(&quot;OfferItemID&quot;);
            String remark = n.getElementsByTagName(&quot;Remark&quot;)
                .item(n.getElementsByTagName(&quot;Remark&quot;).getLength()-1).getTextContent();
            Element fareDetail = (Element) n.getElementsByTagName(&quot;FareDetail&quot;).item(0);
            NodeList fareComponents = fareDetail.getElementsByTagName(&quot;FareComponent&quot;);

            for(j=0; j&lt;fareComponents.getLength(); j++){
                Element el = (Element)fareComponents.item(j);
                if(el.getElementsByTagName(&quot;Remark&quot;).getLength()&gt;0){
                    el.getElementsByTagName(&quot;Remark&quot;).item(0).setTextContent(remark);
                }
            }

            String flightDetailsString = &quot;&quot;;
            flightDetailsString += domToXML(fareDetail);
            for(Object paxO: paxRefs){        
              String pax = (String)paxO;
              if(offerItemId.equals(inBoundOfferId + &quot;#&quot; + pax)){
                  vars.put(&quot;InBoundFareDetails&quot; 
                      + pax ,flightDetailsString.replaceAll(&quot;\\&lt;\\?xml[^\\&gt;]+\\&gt;&quot;,&quot;&quot;));
                  break;
              }
            }
        }

        
        // Find total payment amount, by summing 
        // all &quot;TotalPrice&quot; values of InBound/Outbound Offers.    
        float payment = 0.0F;

        payment +=
        Float.parseFloat(
            ((Element)outBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        payment +=
        Float.parseFloat(
            ((Element)inBoundOfferElement.getElementsByTagName(&quot;TotalPrice&quot;)
                .item(0)).getElementsByTagName(&quot;Total&quot;).item(0).getTextContent()
            );

        // sum service amounts.
        for(i=0; i&lt;serviceListNodes.getLength(); i++){
            n = (Element)serviceListNodes.item(i);

            float sprice= 
                Float.parseFloat(
                n.getElementsByTagName(&quot;Total&quot;).item(0).getTextContent());

            int numOfPassengers = n.getElementsByTagName(&quot;PassengerReferences&quot;)
                .item(0).getTextContent().split(&quot;\\s+&quot;).length;

            payment += sprice * numOfPassengers * (outBoundSegmentList.size()
                + inBoundSegmentList.size());

        }
        vars.put(&quot;payment&quot;, String.valueOf(payment));

    } catch (Exception ex) {
        IsSuccess = false;
        log.error(ex.getMessage());
        ex.printStackTrace();
    }


    </stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getErrorsAndWarnings" enabled="false">
                <stringProp name="XPathExtractor.default">null</stringProp>
                <stringProp name="XPathExtractor.refname">getErrorsAndWarnings</stringProp>
                <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
                <stringProp name="XPathExtractor.xpathQuery">count(/AirShoppingRS/Warnings|/AirShoppingRS/Errors)</stringProp>
                <boolProp name="XPathExtractor.validate">false</boolProp>
                <boolProp name="XPathExtractor.tolerant">false</boolProp>
                <boolProp name="XPathExtractor.namespace">false</boolProp>
              </XPathExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Valid Response" enabled="false">
            <stringProp name="IfController.condition">${getErrorsAndWarnings}==0</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCreateRQ RoundTrip ADT" enabled="false">
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;edis:OrderCreateRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-2OND&quot; TimeStamp=&quot;${timestamp}&quot; Version=&quot;IATA2016.2&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xd;
xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;JRT UNISYS GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Passengers&gt;&#xd;
			&lt;Passenger ObjectKey=&quot;ADT1&quot;&gt;&#xd;
				&lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
				&lt;Age&gt;&#xd;
					&lt;BirthDate&gt;1980-03-06&lt;/BirthDate&gt;&#xd;
				&lt;/Age&gt;&#xd;
				&lt;Name&gt;&#xd;
					&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
					&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
					&lt;Middle&gt;Edward&lt;/Middle&gt;&#xd;
				&lt;/Name&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;jaffa@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/Passengers&gt;&#xd;
		&lt;OrderItems&gt;&#xd;
			&lt;ShoppingResponse&gt;&#xd;
				&lt;Owner&gt;NW&lt;/Owner&gt;&#xd;
				&lt;ResponseID&gt;${getResponseID}&lt;/ResponseID&gt;&#xd;
				&lt;Offers&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;${InBoundOfferId}&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;${InBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD2&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
				&lt;/Offers&gt;&#xd;
			&lt;/ShoppingResponse&gt;&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;${OutBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							${flightsOutBound}&#xd;
						&lt;/OriginDestination&gt;&#xd;
						&#xd;
							${OutBoundFareDetailsADT1}&#xd;
						&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
			&#xd;
		&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;${InBoundOfferId}#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							${flightsInBound}&#xd;
						&lt;/OriginDestination&gt;&#xd;
						${InBoundFareDetailsADT1}&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
		&#xd;
		&lt;/OrderItems&gt;&#xd;
		&lt;Payments&gt;&#xd;
			&lt;Payment&gt;&#xd;
				&lt;Method&gt;&#xd;
					&lt;PaymentCard&gt;&#xd;
						&lt;CardType&gt;Visa&lt;/CardType&gt;&#xd;
						&lt;CardCode&gt;VI&lt;/CardCode&gt;&#xd;
						&lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
						&lt;SeriesCode&gt;584&lt;/SeriesCode&gt;&#xd;
						&lt;CardHolderName&gt;Patel Ramesh&lt;/CardHolderName&gt;&#xd;
								&lt;CardHolderBillingAddress&gt;&#xd;
									&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
									&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
									&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
									&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
								&lt;/CardHolderBillingAddress&gt;&#xd;
								&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${payment}&lt;/Amount&gt;&#xd;
								&lt;EffectiveExpireDate&gt;&#xd;
									&lt;Expiration&gt;0818&lt;/Expiration&gt;&#xd;
								&lt;/EffectiveExpireDate&gt;&#xd;
					&lt;/PaymentCard&gt;&#xd;
				&lt;/Method&gt;&#xd;
				&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${payment}&lt;/Amount&gt;&#xd;
				&lt;Payer&gt;&#xd;
					&lt;Name&gt;&#xd;
						&lt;Surname&gt;Kumar&lt;/Surname&gt;&#xd;
						&lt;Given&gt;Mithalesh&lt;/Given&gt;&#xd;
					&lt;/Name&gt;&#xd;
					&lt;Contacts&gt;&#xd;
						&lt;Contact&gt;&#xd;
							&lt;AddressContact&gt;&#xd;
								&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
								&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
								&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
								&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
							&lt;/AddressContact&gt;&#xd;
							&lt;EmailContact&gt;&#xd;
								&lt;Address&gt;ramesh@unisys.com&lt;/Address&gt;&#xd;
							&lt;/EmailContact&gt;&#xd;
						&lt;/Contact&gt;&#xd;
					&lt;/Contacts&gt;&#xd;
				&lt;/Payer&gt;&#xd;
			&lt;/Payment&gt;&#xd;
		&lt;/Payments&gt;&#xd;
		&lt;DataLists&gt;&#xd;
			&lt;edis:CarryOnAllowanceList&gt;&#xd;
				&lt;edis:CarryOnAllowance ListKey=&quot;AW1&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;5&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CarryOnAllowance&gt;&#xd;
			&lt;/edis:CarryOnAllowanceList&gt;&#xd;
			&lt;edis:CheckedBagAllowanceList&gt;&#xd;
				&lt;edis:CheckedBagAllowance ListKey=&quot;AW2&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;15&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;16&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;17&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;10&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CheckedBagAllowance&gt;&#xd;
			&lt;/edis:CheckedBagAllowanceList&gt;&#xd;
			&lt;FlightSegmentList&gt;&#xd;
				${FlightSegmentListNodes}&#xd;
			&lt;/FlightSegmentList&gt;&#xd;
			&lt;FlightList&gt;&#xd;
				${FlightListNodes}&#xd;
			&lt;/FlightList&gt;&#xd;
			&lt;OriginDestinationList&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${OutBoundDepartureCode}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${OutBoundArrivalCode}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;${OutBoundFlightRef}&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD2&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${OutBoundArrivalCode}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${OutBoundDepartureCode}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;${InBoundFlightRef}&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
			&lt;/OriginDestinationList&gt;&#xd;
			&lt;ServiceList&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;50&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Veg Meal&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;G&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0AP&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;Veg Meal&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;0.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;OTHS&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;${AllSegmentRefs}&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV9&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;1026&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Excess Baggage&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;C&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0CC&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;EXCESS BAGGAGE&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;25.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;XBAG&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;${AllSegmentRefs}&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
						&lt;OtherAssociations&gt;&#xd;
							&lt;OtherAssociation&gt;&#xd;
								&lt;Type&gt;CARRY&lt;/Type&gt;&#xd;
								&lt;ReferenceValue&gt;AW1&lt;/ReferenceValue&gt;&#xd;
							&lt;/OtherAssociation&gt;&#xd;
						&lt;/OtherAssociations&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
			&lt;/ServiceList&gt;&#xd;
		&lt;/DataLists&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/edis:OrderCreateRQ&gt;&#xd;
</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
              <stringProp name="HTTPSampler.port">${port}</stringProp>
              <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/xml</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="false">
          <stringProp name="xmlschema_assertion_filename">C:\schemas\NDC\16.2\AirShoppingRS.xsd</stringProp>
        </XMLSchemaAssertion>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${delay}</stringProp>
        </TestAction>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${delay}</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>true</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
