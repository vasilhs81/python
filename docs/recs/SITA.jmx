<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="AirShoppingWithRandomValues" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Parameters" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="Threads" elementType="Argument">
            <stringProp name="Argument.name">Threads</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Loop" elementType="Argument">
            <stringProp name="Argument.name">Loop</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">8085 , 80</stringProp>
          </elementProp>
          <elementProp name="delay" elementType="Argument">
            <stringProp name="Argument.name">delay</stringProp>
            <stringProp name="Argument.value">0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SubPath" elementType="Argument">
            <stringProp name="Argument.name">SubPath</stringProp>
            <stringProp name="Argument.value">/ndcgateway</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">/ndcgateway , /entry/ndcgateway, /unisys/</stringProp>
          </elementProp>
          <elementProp name="endpoint" elementType="Argument">
            <stringProp name="Argument.name">endpoint</stringProp>
            <stringProp name="Argument.value">35.196.233.85</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">127.0.0.1 , 35.196.106.95, jr-technologies.cloud.tyk.io</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">https, http</stringProp>
          </elementProp>
          <elementProp name="timestamp" elementType="Argument">
            <stringProp name="Argument.name">timestamp</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd&apos;T&apos;hh:mm:ss,curTime)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="StartDate" elementType="Argument">
            <stringProp name="Argument.name">StartDate</stringProp>
            <stringProp name="Argument.value">2018-04-10</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="EndDate" elementType="Argument">
            <stringProp name="Argument.name">EndDate</stringProp>
            <stringProp name="Argument.value">2018-04-30</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Local:
127.0.0.1, 8085. http, /ndcgateway

35.196.120.19 (10.142.0.5)
35.196.159.70 (10.142.0.6)
35.227.49.183 (10.142.0.9)
Public toy neoy LB einai: 35.196.233.85:80

tyc:
jr-technologies.cloud.tyk.io
https, no port, /unisys/

</stringProp>
      </Arguments>
      <hashTree/>
      <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
        <stringProp name="CounterConfig.start">1</stringProp>
        <stringProp name="CounterConfig.end">100000</stringProp>
        <stringProp name="CounterConfig.incr">1</stringProp>
        <stringProp name="CounterConfig.name">cntr</stringProp>
        <stringProp name="CounterConfig.format"></stringProp>
        <boolProp name="CounterConfig.per_user">false</boolProp>
        <stringProp name="TestPlan.comments">used for echotoken to detect messages</stringProp>
      </CounterConfig>
      <hashTree/>
      <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="bookingVariable" enabled="true">
        <stringProp name="variableName">bookingVariable</stringProp>
        <stringProp name="outputFormat"></stringProp>
        <stringProp name="minimumValue">1</stringProp>
        <stringProp name="maximumValue">66</stringProp>
        <stringProp name="randomSeed"></stringProp>
        <boolProp name="perThread">true</boolProp>
      </RandomVariableConfig>
      <hashTree/>
      <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="RandomDate generator" enabled="true">
        <stringProp name="filename"></stringProp>
        <stringProp name="parameters"></stringProp>
        <boolProp name="resetInterpreter">true</boolProp>
        <stringProp name="script">import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;

formatter = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
calendar = Calendar.getInstance();
formatter.setTimeZone(calendar.getTimeZone());

vars.put(&quot;now&quot;, formatter.format(calendar.getTime()));

String startDate = vars.get(&quot;StartDate&quot;);
String [] startDateParts = startDate.split(&quot;\\-&quot;);
//Set Start Time. Attention: December = 11
int startDateYear = Integer.parseInt(startDateParts[0]);
int startDateMonth = Integer.parseInt(startDateParts[1])-1;
int startDateDay = Integer.parseInt(startDateParts[2]);




calendar.set(startDateYear, startDateMonth, startDateDay);
startTime = calendar.getTimeInMillis();



String endDate = vars.get(&quot;EndDate&quot;);
String [] endDateParts = endDate.split(&quot;\\-&quot;);
//Set Start Time. Attention: December = 11
int endDateYear = Integer.parseInt(endDateParts[0]);
int endDateMonth = Integer.parseInt(endDateParts[1])-1;
int endDateDay = Integer.parseInt(endDateParts[2]);



calendar.set(endDateYear, endDateMonth, endDateDay);
endTime = calendar.getTimeInMillis();

randomTime1 = startTime + (long)(Math.random()*(endTime-startTime));
randomTime2 = randomTime1 + (long)(Math.random()*(endTime - randomTime1)+86400000);
//randomTime3 = randomTime2 + (long)(Math.random()*(endTime - randomTime1)+86400000);


String s;

calendar.setTimeInMillis(randomTime1);
s= formatter.format(calendar.getTime());
vars.put(&quot;start&quot;, s);


calendar.setTimeInMillis(randomTime2);
s = formatter.format(calendar.getTime());
vars.put(&quot;end&quot;,s );

//calendar.setTimeInMillis(randomTime3);
//vars.put(&quot;end2&quot;, formatter.format(calendar.getTime()));



//vars.put(&quot;start&quot;, &quot;2017-11-20&quot;);
//vars.put(&quot;end&quot;, &quot;2017-11-25&quot;);

</stringProp>
      </BeanShellPreProcessor>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/xml</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">5852892a884d1c00013778ecfa70c83e72d54426ab0beedd99e2fdf9</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="COMPLETE ORDER FLOW" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${Loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${Threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1506082089000</longProp>
        <longProp name="ThreadGroup.end_time">1506082089000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay">${delayForThreads}</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="onds" elementType="Argument">
              <stringProp name="Argument.name">onds</stringProp>
              <stringProp name="Argument.value">MSP,ORD,MPN,ASI,BOM,DEL,BOM,SCL,BOM,BJS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">MSP,ORD,MPN,ASI,BOM,DEL,BOM,SCL,BOM,BJS</stringProp>
            </elementProp>
            <elementProp name="year" elementType="Argument">
              <stringProp name="Argument.name">year</stringProp>
              <stringProp name="Argument.value">2017</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="adt_number" enabled="true">
          <stringProp name="maximumValue">1</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">adt_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="chd_number" enabled="true">
          <stringProp name="maximumValue">0</stringProp>
          <stringProp name="minimumValue">0</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">chd_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirShoppingRQ One Way ADT" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;OTA_AirFlifoRQ Version=&quot;0&quot; xmlns=&quot;http://www.opentravel.org/OTA/2003/05&quot; TransactionIdentifier=&quot;&quot;&gt;&#xd;
  &lt;Airline Code=&quot;XS&quot;/&gt;&#xd;
  &lt;FlightNumber&gt;209&lt;/FlightNumber&gt;&#xd;
  &lt;DepartureDate&gt;2018-08-29&lt;/DepartureDate&gt;&#xd;
&lt;/OTA_AirFlifoRQ&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/sws/</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/sws/OTA_AirFlfoRQ/1.0</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">// 
216.226.146.183</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
            <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getResponseID" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getResponseID</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/ShoppingResponseID/ResponseID</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getFlightNumber" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getFlightNumber</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[1]/OperatingCarrier/FlightNumber</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getAircraftCode" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getAircraftCode</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[1]/Equipment/AircraftCode</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getClassOfService" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getClassOfService</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[1]/ClassOfService/Code</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPriceGuaranteeTimeLimit" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getPriceGuaranteeTimeLimit</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/PriceGuaranteeTimeLimit/@Timestamp</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getTicketBy" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getTicketBy</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer/TimeLimits/OtherLimits/OtherLimit/TicketByTimeLimit/TicketBy</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getDepartureDateSEG1" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getDepartureDateSEG1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[@SegmentKey=&apos;SEG1&apos;]/Departure/Date</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getDepartureCodeSEG1" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getDepartureCodeSEG1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[@SegmentKey=&apos;SEG1&apos;]/Departure/AirportCode</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getDepartureTimeSEG1" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getDepartureTimeSEG1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[@SegmentKey=&apos;SEG1&apos;]/Departure/Time</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getArrivalDateSEG1" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getArrivalDateSEG1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[@SegmentKey=&apos;SEG1&apos;]/Arrival/Date</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getArrivalCodeSEG1" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getArrivalCodeSEG1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/DataLists/FlightSegmentList/FlightSegment[@SegmentKey=&apos;SEG1&apos;]/Arrival/AirportCode</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getBaseAmountSEG1ADT1" enabled="false">
            <stringProp name="XPathExtractor.default">0</stringProp>
            <stringProp name="XPathExtractor.refname">getBaseAmountSEG1ADT1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[1]/FareDetail/FareComponent[1]/PriceBreakdown/Price/BaseAmount</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getRemarksSEG1ADT1" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getRemarksSEG1ADT1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[1]/FareDetail/Remarks/Remark</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getFareBasisCodeSEG1ADT1" enabled="false">
            <stringProp name="XPathExtractor.default">0</stringProp>
            <stringProp name="XPathExtractor.refname">getFareBasisCodeSEG1ADT1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[1]/FareDetail/FareComponent[1]/FareBasis/FareBasisCode/Code</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getTaxAmountSEG1ADT1" enabled="false">
            <stringProp name="XPathExtractor.default">0</stringProp>
            <stringProp name="XPathExtractor.refname">getTaxAmountSEG1ADT1</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[1]/FareDetail/FareComponent[1]/PriceBreakdown/Price/Taxes/Total</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getPayment" enabled="false">
            <stringProp name="XPathExtractor.default">0</stringProp>
            <stringProp name="XPathExtractor.refname">getPayment</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">substring(sum(/AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/Taxes/Total | /AirShoppingRS/OffersGroup/AirlineOffers/AirlineOffer[1]/PricedOffer/OfferPrice[.]/FareDetail/FareComponent[.]/PriceBreakdown/Price/BaseAmount) + 25* (${adt_number} + ${chd_number}),1,8)</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
            <stringProp name="TestPlan.comments">${__doubleSum(${getBaseAmountSEG1ADT1}, ${getTaxAmountSEG1ADT1})}</stringProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getErrorsAndWarnings" enabled="false">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">getErrorsAndWarnings</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">count(/AirShoppingRS/Warnings|/AirShoppingRS/Errors)</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Valid Response" enabled="false">
          <stringProp name="IfController.condition">${getErrorsAndWarnings}==0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCreateRQ One Way ADT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;edis:OrderCreateRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; TimeStamp=&quot;${timestamp}&quot; Version=&quot;IATA2016.2&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xd;
xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;JRT UNISYS GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Passengers&gt;&#xd;
			&lt;Passenger ObjectKey=&quot;ADT1&quot;&gt;&#xd;
				&lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
				&lt;Age&gt;&#xd;
					&lt;BirthDate&gt;1980-03-06&lt;/BirthDate&gt;&#xd;
				&lt;/Age&gt;&#xd;
				&lt;Name&gt;&#xd;
					&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
					&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
					&lt;Middle&gt;Edward&lt;/Middle&gt;&#xd;
				&lt;/Name&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;jaffa@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/Passengers&gt;&#xd;
		&lt;OrderItems&gt;&#xd;
			&lt;ShoppingResponse&gt;&#xd;
				&lt;Owner&gt;NW&lt;/Owner&gt;&#xd;
				&lt;ResponseID&gt;${getResponseID}&lt;/ResponseID&gt;&#xd;
				&lt;Offers&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;SOL1#OD1&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;SOL1#OD1#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
				&lt;/Offers&gt;&#xd;
			&lt;/ShoppingResponse&gt;&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;SOL1#OD1#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							&lt;Flight&gt;&#xd;
								&lt;Departure&gt;&#xd;
									&lt;AirportCode&gt;${getDepartureCodeSEG1}&lt;/AirportCode&gt;&#xd;
									&lt;Date&gt;${getDepartureDateSEG1}&lt;/Date&gt;&#xd;
									&lt;Time&gt;${getDepartureTimeSEG1}&lt;/Time&gt;&#xd;
								&lt;/Departure&gt;&#xd;
								&lt;Arrival&gt;&#xd;
									&lt;AirportCode&gt;${getArrivalCodeSEG1}&lt;/AirportCode&gt;&#xd;
									&lt;Date&gt;${getArrivalDateSEG1}&lt;/Date&gt;&#xd;
								&lt;/Arrival&gt;&#xd;
								&lt;MarketingCarrier&gt;&#xd;
									&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
									&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
								&lt;/MarketingCarrier&gt;&#xd;
								&lt;OperatingCarrier&gt;&#xd;
									&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
									&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
								&lt;/OperatingCarrier&gt;&#xd;
							&lt;/Flight&gt;&#xd;
						&lt;/OriginDestination&gt;&#xd;
						&lt;FareDetail&gt;&#xd;
							&lt;FareComponent&gt;&#xd;
								&lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
								&lt;PriceBreakdown&gt;&#xd;
									&lt;Price&gt;&#xd;
										&lt;BaseAmount Code=&quot;USD&quot;&gt;${getBaseAmountSEG1ADT1}&lt;/BaseAmount&gt;&#xd;
										&lt;Taxes&gt;&#xd;
											&lt;Total Code=&quot;USD&quot;&gt;${getTaxAmountSEG1ADT1}&lt;/Total&gt;&#xd;
										&lt;/Taxes&gt;&#xd;
									&lt;/Price&gt;&#xd;
								&lt;/PriceBreakdown&gt;&#xd;
								&lt;FareBasis&gt;&#xd;
									&lt;FareBasisCode&gt;&#xd;
										&lt;Code&gt;${getFareBasisCodeSEG1ADT1}&lt;/Code&gt;&#xd;
									&lt;/FareBasisCode&gt;&#xd;
									&lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
								&lt;/FareBasis&gt;&#xd;
								&lt;FareRules&gt;&#xd;
									&lt;Remarks&gt;&#xd;
										&lt;Remark&gt;${getRemarksSEG1ADT1}&lt;/Remark&gt;&#xd;
									&lt;/Remarks&gt;&#xd;
								&lt;/FareRules&gt;&#xd;
							&lt;/FareComponent&gt;&#xd;
						&lt;/FareDetail&gt;&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
		&lt;/OrderItems&gt;&#xd;
		&lt;DataLists&gt;&#xd;
			&lt;edis:CarryOnAllowanceList&gt;&#xd;
				&lt;edis:CarryOnAllowance ListKey=&quot;AW1&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;5&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CarryOnAllowance&gt;&#xd;
			&lt;/edis:CarryOnAllowanceList&gt;&#xd;
			&lt;edis:CheckedBagAllowanceList&gt;&#xd;
				&lt;edis:CheckedBagAllowance ListKey=&quot;AW2&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;15&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;16&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;17&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;10&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CheckedBagAllowance&gt;&#xd;
			&lt;/edis:CheckedBagAllowanceList&gt;&#xd;
			&lt;FlightSegmentList&gt;&#xd;
				&lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
					&lt;Departure&gt;&#xd;
						&lt;AirportCode&gt;${getDepartureCodeSEG1}&lt;/AirportCode&gt;&#xd;
						&lt;Date&gt;${getDepartureDateSEG1}&lt;/Date&gt;&#xd;
						&lt;Time&gt;${getDepartureTimeSEG1}&lt;/Time&gt;&#xd;
					&lt;/Departure&gt;&#xd;
					&lt;Arrival&gt;&#xd;
						&lt;AirportCode&gt;${getArrivalCodeSEG1}&lt;/AirportCode&gt;&#xd;
						&lt;Date&gt;${getArrivalDateSEG1}&lt;/Date&gt;&#xd;
					&lt;/Arrival&gt;&#xd;
					&lt;MarketingCarrier&gt;&#xd;
						&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
						&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
					&lt;/MarketingCarrier&gt;&#xd;
					&lt;OperatingCarrier&gt;&#xd;
						&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
						&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
					&lt;/OperatingCarrier&gt;&#xd;
					&lt;Equipment&gt;&#xd;
						&lt;AircraftCode&gt;${getAircraftCode}&lt;/AircraftCode&gt;&#xd;
					&lt;/Equipment&gt;&#xd;
					&lt;ClassOfService&gt;&#xd;
						&lt;Code&gt;${getClassOfService}&lt;/Code&gt;&#xd;
						&lt;MarketingName&gt;Economy&lt;/MarketingName&gt;&#xd;
					&lt;/ClassOfService&gt;&#xd;
					&lt;FlightDetail&gt;&#xd;
						&lt;FlightDuration&gt;&#xd;
							&lt;Value&gt;PT5H0M&lt;/Value&gt;&#xd;
						&lt;/FlightDuration&gt;&#xd;
					&lt;/FlightDetail&gt;&#xd;
				&lt;/FlightSegment&gt;&#xd;
			&lt;/FlightSegmentList&gt;&#xd;
			&lt;FlightList&gt;&#xd;
				&lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
					&lt;Journey&gt;&#xd;
						&lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
					&lt;/Journey&gt;&#xd;
					&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
				&lt;/Flight&gt;&#xd;
			&lt;/FlightList&gt;&#xd;
			&lt;OriginDestinationList&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${getDepartureCodeSEG1}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${getArrivalCodeSEG1}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
			&lt;/OriginDestinationList&gt;&#xd;
			&lt;ServiceList&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;50&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Veg Meal&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;G&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0AP&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;Veg Meal&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;0.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;OTHS&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV9&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;1026&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Excess Baggage&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;C&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0CC&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;EXCESS BAGGAGE&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;25.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;XBAG&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
						&lt;OtherAssociations&gt;&#xd;
							&lt;OtherAssociation&gt;&#xd;
								&lt;Type&gt;CARRY&lt;/Type&gt;&#xd;
								&lt;ReferenceValue&gt;AW1&lt;/ReferenceValue&gt;&#xd;
							&lt;/OtherAssociation&gt;&#xd;
						&lt;/OtherAssociations&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
			&lt;/ServiceList&gt;&#xd;
		&lt;/DataLists&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/edis:OrderCreateRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getOrderID" enabled="true">
              <stringProp name="XPathExtractor.default">null</stringProp>
              <stringProp name="XPathExtractor.refname">getOrderID</stringProp>
              <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">/OrderViewRS/Response/Order/OrderID</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderViewRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirDocIssueRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;AirDocIssueRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-12-04T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;TicketDocQuantity&gt;1&lt;/TicketDocQuantity&gt;&#xd;
		&lt;TicketDocInfo&gt;&#xd;
			&lt;TravelerInfo&gt;&#xd;
				&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
				&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
			&lt;/TravelerInfo&gt;&#xd;
			&lt;OrderReference&gt;&#xd;
				&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
			&lt;/OrderReference&gt;&#xd;
			&lt;Payments&gt;&#xd;
				&lt;Payment&gt;&#xd;
					&lt;Type&gt;&#xd;
						&lt;Code&gt;003&lt;/Code&gt;&#xd;
					&lt;/Type&gt;&#xd;
					&lt;PaymentCard&gt;&#xd;
						&lt;CardType&gt;VISA&lt;/CardType&gt;&#xd;
						&lt;CardCode&gt;VI&lt;/CardCode&gt;&#xd;
						&lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
						&lt;SeriesCode&gt;123&lt;/SeriesCode&gt;&#xd;
						&lt;CardHolderName&gt;Patel Ramesh&lt;/CardHolderName&gt;&#xd;
						&lt;CardHolderBillingAddress&gt;&#xd;
							&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
							&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
							&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
							&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
						&lt;/CardHolderBillingAddress&gt;&#xd;
						&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${getPayment}&lt;/Amount&gt;&#xd;
						&lt;EffectiveExpireDate&gt;&#xd;
							&lt;Expiration&gt;0818&lt;/Expiration&gt;&#xd;
						&lt;/EffectiveExpireDate&gt;&#xd;
					&lt;/PaymentCard&gt;&#xd;
				&lt;/Payment&gt;&#xd;
			&lt;/Payments&gt;&#xd;
		&lt;/TicketDocInfo&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/AirDocIssueRQ&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderRetrieveRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderRetrieveRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot;  xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Filters&gt;&#xd;
			&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
		&lt;/Filters&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderRetrieveRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderViewRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderHistoryRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderHistoryRQ xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; Version=&quot;IATA2016.2&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-08-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderHistoryRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:/tmp/16_2 schemas_EDIST/OrderHistoryRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderListRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderListRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; TimeStamp=&quot;2015-12-10T12:39:00Z&quot; Version=&quot;IATA2016.2&quot; Target=&quot;Test&quot; PrimaryLangID=&quot;en&quot; AltLangID=&quot;en&quot; RetransmissionIndicator=&quot;false&quot; AsynchronousAllowedInd=&quot;false&quot; TransactionIdentifier=&quot;a&quot; SequenceNmbr=&quot;113&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Filters&gt;&#xd;
			&lt;TravelDateRange&gt;&#xd;
				&lt;Effective&gt;${getDepartureDateSEG1}&lt;/Effective&gt;&#xd;
				&lt;Expiration&gt;${getArrivalDateSEG1}&lt;/Expiration&gt;&#xd;
			&lt;/TravelDateRange&gt;&#xd;
		&lt;/Filters&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderListRQ&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderListRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCancelRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderCancelRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
        	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
    &lt;Query&gt;&#xd;
        &lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
    &lt;/Query&gt;&#xd;
&#xd;
    &lt;/OrderCancelRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderCancelRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="false">
          <stringProp name="xmlschema_assertion_filename">C:\schemas\NDC\16.2\AirShoppingRS.xsd</stringProp>
        </XMLSchemaAssertion>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${delay}</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ARR Cancel Flow" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${Loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${Threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1506082089000</longProp>
        <longProp name="ThreadGroup.end_time">1506082089000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay">${delayForThreads}</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="onds" elementType="Argument">
              <stringProp name="Argument.name">onds</stringProp>
              <stringProp name="Argument.value">MSP,ORD,MPN,ASI,BOM,DEL,BOM,SCL,BOM,BJS</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">MSP,ORD,MPN,ASI,BOM,DEL,BOM,SCL,BOM,BJS</stringProp>
            </elementProp>
            <elementProp name="year" elementType="Argument">
              <stringProp name="Argument.name">year</stringProp>
              <stringProp name="Argument.value">2017</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="adt_number" enabled="false">
          <stringProp name="maximumValue">1</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">adt_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="chd_number" enabled="false">
          <stringProp name="maximumValue">0</stringProp>
          <stringProp name="minimumValue">0</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">chd_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookie" enabled="true">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="COOKIE" elementType="Cookie" testname="COOKIE">
              <stringProp name="Cookie.value">ARR_COOKIE=rd922o00000000000000000000ffff0ad919a1o8731; path=/; Httponly;Secure</stringProp>
              <stringProp name="Cookie.domain"></stringProp>
              <stringProp name="Cookie.path"></stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">standard</stringProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignIn" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot;&gt;&#xd;
        &lt;soapenv:Header&gt;&#xd;
        &lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;&gt;&#xd;
            &lt;/hal:Config&gt;&#xd;
        &lt;/soapenv:Header&gt;&#xd;
           &lt;soapenv:Body wsu:Id=&quot;id-375308FD1FC72D539E14930376266424&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
                &lt;tem:ARR_SignIn&gt;&#xd;
                     &lt;tem:ARR_SignInRQ&gt;&#xd;
                           &lt;sita:aRR_ServiceConfigField&gt;&#xd;
                                &lt;sita:applicationIdField&gt;Aodh-Test2&lt;/sita:applicationIdField&gt;&#xd;
                                &lt;sita:pOSField&gt;&#xd;
                                     &lt;sita1:sourceField&gt;&#xd;
                                           &lt;sita1:SWF_SourceType&gt;&#xd;
                                                &lt;sita1:agentDutyCodeField&gt;41&lt;/sita1:agentDutyCodeField&gt;&#xd;
                                                &lt;sita1:agentSineField&gt;906/1234A&lt;/sita1:agentSineField&gt;&#xd;
                                                &lt;sita1:airlineVendorIDField&gt;7I&lt;/sita1:airlineVendorIDField&gt;&#xd;
                                                &lt;sita1:airportCodeField&gt;MIA&lt;/sita1:airportCodeField&gt;&#xd;
                                                &lt;sita1:applicationTypeField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:bagTagPectabField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:checkinZoneField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:eRSP_UserIDField&gt;NDC/9NDC7I&lt;/sita1:eRSP_UserIDField&gt;&#xd;
                                                &lt;sita1:iSOCountryField&gt;US&lt;/sita1:iSOCountryField&gt;&#xd;
                                                &lt;sita1:printBoardingPassPectabField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:pseudoCityCodeField&gt;WWW001&lt;/sita1:pseudoCityCodeField&gt;&#xd;
                                                &lt;sita1:requestorIDField&gt;&#xd;
                                                     &lt;sita1:iD_ContextField&gt;Airfare&lt;/sita1:iD_ContextField&gt;&#xd;
                                                     &lt;sita1:idField&gt;f0uZ2-Jp55B-70YgW-OmEa6&lt;/sita1:idField&gt;&#xd;
                                                     &lt;sita1:typeField&gt;7&lt;/sita1:typeField&gt;&#xd;
                                                &lt;/sita1:requestorIDField&gt;&#xd;
                                           &lt;/sita1:SWF_SourceType&gt;&#xd;
                                     &lt;/sita1:sourceField&gt;&#xd;
                                     &lt;sita1:targetField&gt;QAB&lt;/sita1:targetField&gt;&#xd;
                                &lt;/sita:pOSField&gt;&#xd;
                                &lt;sita:useRegressionDataField&gt;false&lt;/sita:useRegressionDataField&gt;&#xd;
                           &lt;sita:useRegressionDataFieldSpecified&gt;false&lt;/sita:useRegressionDataFieldSpecified&gt;&#xd;
                           &lt;/sita:aRR_ServiceConfigField&gt;&#xd;
                     &lt;/tem:ARR_SignInRQ&gt;&#xd;
                &lt;/tem:ARR_SignIn&gt;&#xd;
           &lt;/soapenv:Body&gt;&#xd;
     &lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_SignIn</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-APIKey</stringProp>
                <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
            <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="SessionID" enabled="true">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">SessionID</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/Envelope/Body/ARR_SignInResponse/sessionID</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="SignInStatus" enabled="true">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">SignInStatus</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/Envelope/Body/ARR_SignInResponse/ReturnData/responseStatusField</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="SignIn Success" enabled="true">
          <stringProp name="IfController.condition">${SignInStatus}==0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RetrieveRefundDetails" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; &#xd;
xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot;&gt;&#xd;
        &lt;soapenv:Header&gt;&#xd;
        &lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;&gt;&#xd;
            &lt;/hal:Config&gt;&lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body  wsu:Id=&quot;id-375308FD1FC72D539E14930376266424&quot;  xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
                &lt;tem:ARR_RetrieveRefundDetails&gt;&#xd;
         &lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
         &lt;tem:ARR_RetrieveRefundDetailsRQ&gt;&#xd;
            &lt;sita:passengerInfoField&gt;&#xd;
               &lt;sita:ARR_RetrieveRefundDetailsPassengerInfo&gt;&#xd;
               	&lt;sita:refundOptionsField&gt;&#xd;
                     &lt;sita1:ignoreTaxItemsField/&gt;&#xd;
                     &lt;sita1:includeNegotiatedFaresField&gt;false&lt;/sita1:includeNegotiatedFaresField&gt;&#xd;
                     &lt;sita1:includeNegotiatedFaresFieldSpecified&gt;true&lt;/sita1:includeNegotiatedFaresFieldSpecified&gt;&#xd;
                     &lt;sita1:negotiatedFareCodeField/&gt;&#xd;
                     &lt;sita1:negotiatedFaresOnlyField&gt;false&lt;/sita1:negotiatedFaresOnlyField&gt;&#xd;
                     &lt;sita1:negotiatedFaresOnlyFieldSpecified&gt;true&lt;/sita1:negotiatedFaresOnlyFieldSpecified&gt;&#xd;
                     &lt;sita1:overrideInterlineAgreementField&gt;false&lt;/sita1:overrideInterlineAgreementField&gt;&#xd;
                     &lt;sita1:passengerTypeField&gt;&#xd;
                     	&lt;sita1:codeField&gt;ADT&lt;/sita1:codeField&gt;&#xd;
						&lt;sita1:revisedCodeField/&gt;&#xd;
                     &lt;/sita1:passengerTypeField&gt;&#xd;
                     &lt;sita1:pricingSourceField&gt;Both&lt;/sita1:pricingSourceField&gt;&#xd;
                     &lt;sita1:pricingSourceFieldSpecified&gt;false&lt;/sita1:pricingSourceFieldSpecified&gt;&#xd;
                     &lt;sita1:taxExemptItemsField/&gt;&#xd;
                     &lt;sita1:tourCodesField/&gt;&#xd;
                     &lt;sita1:waiverField&gt;true&lt;/sita1:waiverField&gt;&#xd;
                  &lt;/sita:refundOptionsField&gt;&#xd;
                  &lt;sita:ticketingInfoField&gt;&#xd;
                    &lt;sita1:airlineAccountingCodeField&gt;958&lt;/sita1:airlineAccountingCodeField&gt;&#xd;
                    &lt;sita1:formAndSerialNumberField&gt;4321007075&lt;/sita1:formAndSerialNumberField&gt;&#xd;
					&lt;sita:residingDatabaseField&gt;7I&lt;/sita:residingDatabaseField&gt;&#xd;
                  &lt;/sita:ticketingInfoField&gt;&#xd;
               &lt;/sita:ARR_RetrieveRefundDetailsPassengerInfo&gt;&#xd;
            &lt;/sita:passengerInfoField&gt;&#xd;
         &lt;/tem:ARR_RetrieveRefundDetailsRQ&gt;&#xd;
      &lt;/tem:ARR_RetrieveRefundDetails&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_RetrieveRefundDetails</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:arr=&quot;http://schemas.microsoft.com/2003/10/Serialization/Arrays&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot;&gt;&#xd;
        &lt;soapenv:Header&gt;&#xd;
        &lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;&gt;&#xd;
            &lt;/hal:Config&gt;&#xd;
        &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body wsu:Id=&quot;id-99ED2D14CB06036292148707533715114&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;tem:ARR_SignOut&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:ARR_SignOutRQ&gt;&#xd;
            &lt;sita:textField&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;arr:string xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
            &lt;/sita:textField&gt;&#xd;
         &lt;/tem:ARR_SignOutRQ&gt;&#xd;
      &lt;/tem:ARR_SignOut&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_SignOut</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Valid Response" enabled="false">
          <stringProp name="IfController.condition">${getErrorsAndWarnings}==0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCreateRQ One Way ADT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;edis:OrderCreateRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; TimeStamp=&quot;${timestamp}&quot; Version=&quot;IATA2016.2&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xd;
xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;JRT UNISYS GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Passengers&gt;&#xd;
			&lt;Passenger ObjectKey=&quot;ADT1&quot;&gt;&#xd;
				&lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
				&lt;Age&gt;&#xd;
					&lt;BirthDate&gt;1980-03-06&lt;/BirthDate&gt;&#xd;
				&lt;/Age&gt;&#xd;
				&lt;Name&gt;&#xd;
					&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
					&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
					&lt;Middle&gt;Edward&lt;/Middle&gt;&#xd;
				&lt;/Name&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;jaffa@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/Passengers&gt;&#xd;
		&lt;OrderItems&gt;&#xd;
			&lt;ShoppingResponse&gt;&#xd;
				&lt;Owner&gt;NW&lt;/Owner&gt;&#xd;
				&lt;ResponseID&gt;${getResponseID}&lt;/ResponseID&gt;&#xd;
				&lt;Offers&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;SOL1#OD1&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;SOL1#OD1#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
				&lt;/Offers&gt;&#xd;
			&lt;/ShoppingResponse&gt;&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;SOL1#OD1#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							&lt;Flight&gt;&#xd;
								&lt;Departure&gt;&#xd;
									&lt;AirportCode&gt;${getDepartureCodeSEG1}&lt;/AirportCode&gt;&#xd;
									&lt;Date&gt;${getDepartureDateSEG1}&lt;/Date&gt;&#xd;
									&lt;Time&gt;${getDepartureTimeSEG1}&lt;/Time&gt;&#xd;
								&lt;/Departure&gt;&#xd;
								&lt;Arrival&gt;&#xd;
									&lt;AirportCode&gt;${getArrivalCodeSEG1}&lt;/AirportCode&gt;&#xd;
									&lt;Date&gt;${getArrivalDateSEG1}&lt;/Date&gt;&#xd;
								&lt;/Arrival&gt;&#xd;
								&lt;MarketingCarrier&gt;&#xd;
									&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
									&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
								&lt;/MarketingCarrier&gt;&#xd;
								&lt;OperatingCarrier&gt;&#xd;
									&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
									&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
								&lt;/OperatingCarrier&gt;&#xd;
							&lt;/Flight&gt;&#xd;
						&lt;/OriginDestination&gt;&#xd;
						&lt;FareDetail&gt;&#xd;
							&lt;FareComponent&gt;&#xd;
								&lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
								&lt;PriceBreakdown&gt;&#xd;
									&lt;Price&gt;&#xd;
										&lt;BaseAmount Code=&quot;USD&quot;&gt;${getBaseAmountSEG1ADT1}&lt;/BaseAmount&gt;&#xd;
										&lt;Taxes&gt;&#xd;
											&lt;Total Code=&quot;USD&quot;&gt;${getTaxAmountSEG1ADT1}&lt;/Total&gt;&#xd;
										&lt;/Taxes&gt;&#xd;
									&lt;/Price&gt;&#xd;
								&lt;/PriceBreakdown&gt;&#xd;
								&lt;FareBasis&gt;&#xd;
									&lt;FareBasisCode&gt;&#xd;
										&lt;Code&gt;${getFareBasisCodeSEG1ADT1}&lt;/Code&gt;&#xd;
									&lt;/FareBasisCode&gt;&#xd;
									&lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
								&lt;/FareBasis&gt;&#xd;
								&lt;FareRules&gt;&#xd;
									&lt;Remarks&gt;&#xd;
										&lt;Remark&gt;${getRemarksSEG1ADT1}&lt;/Remark&gt;&#xd;
									&lt;/Remarks&gt;&#xd;
								&lt;/FareRules&gt;&#xd;
							&lt;/FareComponent&gt;&#xd;
						&lt;/FareDetail&gt;&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
		&lt;/OrderItems&gt;&#xd;
		&lt;DataLists&gt;&#xd;
			&lt;edis:CarryOnAllowanceList&gt;&#xd;
				&lt;edis:CarryOnAllowance ListKey=&quot;AW1&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;5&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CarryOnAllowance&gt;&#xd;
			&lt;/edis:CarryOnAllowanceList&gt;&#xd;
			&lt;edis:CheckedBagAllowanceList&gt;&#xd;
				&lt;edis:CheckedBagAllowance ListKey=&quot;AW2&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;15&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;16&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;17&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;10&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CheckedBagAllowance&gt;&#xd;
			&lt;/edis:CheckedBagAllowanceList&gt;&#xd;
			&lt;FlightSegmentList&gt;&#xd;
				&lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
					&lt;Departure&gt;&#xd;
						&lt;AirportCode&gt;${getDepartureCodeSEG1}&lt;/AirportCode&gt;&#xd;
						&lt;Date&gt;${getDepartureDateSEG1}&lt;/Date&gt;&#xd;
						&lt;Time&gt;${getDepartureTimeSEG1}&lt;/Time&gt;&#xd;
					&lt;/Departure&gt;&#xd;
					&lt;Arrival&gt;&#xd;
						&lt;AirportCode&gt;${getArrivalCodeSEG1}&lt;/AirportCode&gt;&#xd;
						&lt;Date&gt;${getArrivalDateSEG1}&lt;/Date&gt;&#xd;
					&lt;/Arrival&gt;&#xd;
					&lt;MarketingCarrier&gt;&#xd;
						&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
						&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
					&lt;/MarketingCarrier&gt;&#xd;
					&lt;OperatingCarrier&gt;&#xd;
						&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
						&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
					&lt;/OperatingCarrier&gt;&#xd;
					&lt;Equipment&gt;&#xd;
						&lt;AircraftCode&gt;${getAircraftCode}&lt;/AircraftCode&gt;&#xd;
					&lt;/Equipment&gt;&#xd;
					&lt;ClassOfService&gt;&#xd;
						&lt;Code&gt;${getClassOfService}&lt;/Code&gt;&#xd;
						&lt;MarketingName&gt;Economy&lt;/MarketingName&gt;&#xd;
					&lt;/ClassOfService&gt;&#xd;
					&lt;FlightDetail&gt;&#xd;
						&lt;FlightDuration&gt;&#xd;
							&lt;Value&gt;PT5H0M&lt;/Value&gt;&#xd;
						&lt;/FlightDuration&gt;&#xd;
					&lt;/FlightDetail&gt;&#xd;
				&lt;/FlightSegment&gt;&#xd;
			&lt;/FlightSegmentList&gt;&#xd;
			&lt;FlightList&gt;&#xd;
				&lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
					&lt;Journey&gt;&#xd;
						&lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
					&lt;/Journey&gt;&#xd;
					&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
				&lt;/Flight&gt;&#xd;
			&lt;/FlightList&gt;&#xd;
			&lt;OriginDestinationList&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${getDepartureCodeSEG1}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${getArrivalCodeSEG1}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
			&lt;/OriginDestinationList&gt;&#xd;
			&lt;ServiceList&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;50&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Veg Meal&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;G&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0AP&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;Veg Meal&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;0.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;OTHS&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV9&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;1026&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Excess Baggage&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;C&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0CC&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;EXCESS BAGGAGE&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;25.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;XBAG&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
						&lt;OtherAssociations&gt;&#xd;
							&lt;OtherAssociation&gt;&#xd;
								&lt;Type&gt;CARRY&lt;/Type&gt;&#xd;
								&lt;ReferenceValue&gt;AW1&lt;/ReferenceValue&gt;&#xd;
							&lt;/OtherAssociation&gt;&#xd;
						&lt;/OtherAssociations&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
			&lt;/ServiceList&gt;&#xd;
		&lt;/DataLists&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/edis:OrderCreateRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getOrderID" enabled="true">
              <stringProp name="XPathExtractor.default">null</stringProp>
              <stringProp name="XPathExtractor.refname">getOrderID</stringProp>
              <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">/OrderViewRS/Response/Order/OrderID</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderViewRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirDocIssueRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;AirDocIssueRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-12-04T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;TicketDocQuantity&gt;1&lt;/TicketDocQuantity&gt;&#xd;
		&lt;TicketDocInfo&gt;&#xd;
			&lt;TravelerInfo&gt;&#xd;
				&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
				&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
			&lt;/TravelerInfo&gt;&#xd;
			&lt;OrderReference&gt;&#xd;
				&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
			&lt;/OrderReference&gt;&#xd;
			&lt;Payments&gt;&#xd;
				&lt;Payment&gt;&#xd;
					&lt;Type&gt;&#xd;
						&lt;Code&gt;003&lt;/Code&gt;&#xd;
					&lt;/Type&gt;&#xd;
					&lt;PaymentCard&gt;&#xd;
						&lt;CardType&gt;VISA&lt;/CardType&gt;&#xd;
						&lt;CardCode&gt;VI&lt;/CardCode&gt;&#xd;
						&lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
						&lt;SeriesCode&gt;123&lt;/SeriesCode&gt;&#xd;
						&lt;CardHolderName&gt;Patel Ramesh&lt;/CardHolderName&gt;&#xd;
						&lt;CardHolderBillingAddress&gt;&#xd;
							&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
							&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
							&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
							&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
						&lt;/CardHolderBillingAddress&gt;&#xd;
						&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${getPayment}&lt;/Amount&gt;&#xd;
						&lt;EffectiveExpireDate&gt;&#xd;
							&lt;Expiration&gt;0818&lt;/Expiration&gt;&#xd;
						&lt;/EffectiveExpireDate&gt;&#xd;
					&lt;/PaymentCard&gt;&#xd;
				&lt;/Payment&gt;&#xd;
			&lt;/Payments&gt;&#xd;
		&lt;/TicketDocInfo&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/AirDocIssueRQ&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderRetrieveRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderRetrieveRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot;  xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Filters&gt;&#xd;
			&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
		&lt;/Filters&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderRetrieveRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderViewRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderHistoryRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderHistoryRQ xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; Version=&quot;IATA2016.2&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-08-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderHistoryRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:/tmp/16_2 schemas_EDIST/OrderHistoryRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderListRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderListRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; TimeStamp=&quot;2015-12-10T12:39:00Z&quot; Version=&quot;IATA2016.2&quot; Target=&quot;Test&quot; PrimaryLangID=&quot;en&quot; AltLangID=&quot;en&quot; RetransmissionIndicator=&quot;false&quot; AsynchronousAllowedInd=&quot;false&quot; TransactionIdentifier=&quot;a&quot; SequenceNmbr=&quot;113&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Filters&gt;&#xd;
			&lt;TravelDateRange&gt;&#xd;
				&lt;Effective&gt;${getDepartureDateSEG1}&lt;/Effective&gt;&#xd;
				&lt;Expiration&gt;${getArrivalDateSEG1}&lt;/Expiration&gt;&#xd;
			&lt;/TravelDateRange&gt;&#xd;
		&lt;/Filters&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderListRQ&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderListRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCancelRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderCancelRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
        	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
    &lt;Query&gt;&#xd;
        &lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
    &lt;/Query&gt;&#xd;
&#xd;
    &lt;/OrderCancelRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderCancelRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="false">
          <stringProp name="xmlschema_assertion_filename">C:\schemas\NDC\16.2\AirShoppingRS.xsd</stringProp>
        </XMLSchemaAssertion>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${delay}</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="ARR Update Segments Flow" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${Loop}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${Threads}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1506082089000</longProp>
        <longProp name="ThreadGroup.end_time">1506082089000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay">${delayForThreads}</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ticketNbr" elementType="Argument">
              <stringProp name="Argument.name">ticketNbr</stringProp>
              <stringProp name="Argument.value">4321010854</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">MSP,ORD,MPN,ASI,BOM,DEL,BOM,SCL,BOM,BJS</stringProp>
            </elementProp>
            <elementProp name="pnr" elementType="Argument">
              <stringProp name="Argument.name">pnr</stringProp>
              <stringProp name="Argument.value">P1363</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ticketNbr2" elementType="Argument">
              <stringProp name="Argument.name">ticketNbr2</stringProp>
              <stringProp name="Argument.value">4321010855</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="adt_number" enabled="false">
          <stringProp name="maximumValue">1</stringProp>
          <stringProp name="minimumValue">1</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">adt_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="chd_number" enabled="false">
          <stringProp name="maximumValue">0</stringProp>
          <stringProp name="minimumValue">0</stringProp>
          <stringProp name="outputFormat"></stringProp>
          <boolProp name="perThread">true</boolProp>
          <stringProp name="randomSeed"></stringProp>
          <stringProp name="variableName">chd_number</stringProp>
        </RandomVariableConfig>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="Cookie" enabled="true">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="COOKIE" elementType="Cookie" testname="COOKIE">
              <stringProp name="Cookie.value">ARR_COOKIE=rd922o00000000000000000000ffff0ad919a1o8731; path=/; Httponly;Secure</stringProp>
              <stringProp name="Cookie.domain"></stringProp>
              <stringProp name="Cookie.path"></stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">false</boolProp>
          <stringProp name="CookieManager.policy">standard</stringProp>
          <stringProp name="CookieManager.implementation">org.apache.jmeter.protocol.http.control.HC4CookieHandler</stringProp>
        </CookieManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignIn" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot;&gt;&#xd;
        &lt;soapenv:Header&gt;&#xd;
        &lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;&gt;&#xd;
            &lt;/hal:Config&gt;&#xd;
        &lt;/soapenv:Header&gt;&#xd;
           &lt;soapenv:Body wsu:Id=&quot;id-375308FD1FC72D539E14930376266424&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
                &lt;tem:ARR_SignIn&gt;&#xd;
                     &lt;tem:ARR_SignInRQ&gt;&#xd;
                           &lt;sita:aRR_ServiceConfigField&gt;&#xd;
                                &lt;sita:applicationIdField&gt;Aodh-Test2&lt;/sita:applicationIdField&gt;&#xd;
                                &lt;sita:pOSField&gt;&#xd;
                                     &lt;sita1:sourceField&gt;&#xd;
                                           &lt;sita1:SWF_SourceType&gt;&#xd;
                                                &lt;sita1:agentDutyCodeField&gt;41&lt;/sita1:agentDutyCodeField&gt;&#xd;
                                                &lt;sita1:agentSineField&gt;906/1234A&lt;/sita1:agentSineField&gt;&#xd;
                                                &lt;sita1:airlineVendorIDField&gt;7I&lt;/sita1:airlineVendorIDField&gt;&#xd;
                                                &lt;sita1:airportCodeField&gt;MIA&lt;/sita1:airportCodeField&gt;&#xd;
                                                &lt;sita1:applicationTypeField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:bagTagPectabField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:checkinZoneField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:eRSP_UserIDField&gt;NDC/9NDC7I&lt;/sita1:eRSP_UserIDField&gt;&#xd;
                                                &lt;sita1:iSOCountryField&gt;US&lt;/sita1:iSOCountryField&gt;&#xd;
                                                &lt;sita1:printBoardingPassPectabField xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
                                                &lt;sita1:pseudoCityCodeField&gt;WWW001&lt;/sita1:pseudoCityCodeField&gt;&#xd;
                                                &lt;sita1:requestorIDField&gt;&#xd;
                                                     &lt;sita1:iD_ContextField&gt;Airfare&lt;/sita1:iD_ContextField&gt;&#xd;
                                                     &lt;sita1:idField&gt;f0uZ2-Jp55B-70YgW-OmEa6&lt;/sita1:idField&gt;&#xd;
                                                     &lt;sita1:typeField&gt;7&lt;/sita1:typeField&gt;&#xd;
                                                &lt;/sita1:requestorIDField&gt;&#xd;
                                           &lt;/sita1:SWF_SourceType&gt;&#xd;
                                     &lt;/sita1:sourceField&gt;&#xd;
                                     &lt;sita1:targetField&gt;QAB&lt;/sita1:targetField&gt;&#xd;
                                &lt;/sita:pOSField&gt;&#xd;
                                &lt;sita:useRegressionDataField&gt;false&lt;/sita:useRegressionDataField&gt;&#xd;
                           &lt;sita:useRegressionDataFieldSpecified&gt;false&lt;/sita:useRegressionDataFieldSpecified&gt;&#xd;
                           &lt;/sita:aRR_ServiceConfigField&gt;&#xd;
                     &lt;/tem:ARR_SignInRQ&gt;&#xd;
                &lt;/tem:ARR_SignIn&gt;&#xd;
           &lt;/soapenv:Body&gt;&#xd;
     &lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/xml</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">SOAPAction</stringProp>
                <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_SignIn</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">X-APIKey</stringProp>
                <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Host</stringProp>
                <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
            <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
          </BeanShellPreProcessor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="SessionID" enabled="true">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">SessionID</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/Envelope/Body/ARR_SignInResponse/sessionID</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="SignInStatus" enabled="true">
            <stringProp name="XPathExtractor.default">null</stringProp>
            <stringProp name="XPathExtractor.refname">SignInStatus</stringProp>
            <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">/Envelope/Body/ARR_SignInResponse/ReturnData/responseStatusField</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="SignIn Success" enabled="true">
          <stringProp name="IfController.condition">${SignInStatus}==0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ARR_RetrieveAirAvailability" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;/&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;tem:ARR_RetrieveAirAvailability&gt;&#xd;
			&lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
			 &lt;tem:ARR_RetrieveAirAvailabilityRQ&gt;&#xd;
            &lt;sita:displayOptionsField xsi:nil=&quot;true&quot;/&gt;&#xd;
            &lt;sita:originDestinationInformationField&gt;&#xd;
               &lt;sita:arrivalLocationField&gt;&#xd;
                  &lt;sita:locationCodeField&gt;CUR&lt;/sita:locationCodeField&gt;&#xd;
               &lt;/sita:arrivalLocationField&gt;&#xd;
               &lt;sita:connectionLocationsField xsi:nil=&quot;true&quot;/&gt;&#xd;
               &lt;sita:departureDateField&gt;2018-09-30&lt;/sita:departureDateField&gt;&#xd;
               &lt;sita:departureLocationField&gt;&#xd;
                  &lt;sita:locationCodeField&gt;BON&lt;/sita:locationCodeField&gt;&#xd;
               &lt;/sita:departureLocationField&gt;&#xd;
               &lt;sita:departureTimeField xsi:nil=&quot;true&quot;/&gt;&#xd;
            &lt;/sita:originDestinationInformationField&gt;&#xd;
            &lt;sita:specificFlightInfoField&gt;&#xd;
               &lt;sita:airlineField&gt;&#xd;
                  &lt;sita:codeField&gt;7I&lt;/sita:codeField&gt;&#xd;
               &lt;/sita:airlineField&gt;&#xd;
            &lt;/sita:specificFlightInfoField&gt;&#xd;
         &lt;/tem:ARR_RetrieveAirAvailabilityRQ&gt;&#xd;
		&lt;/tem:ARR_RetrieveAirAvailability&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_RetrieveAirAvailability</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ARR_UpdateItinerary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.HalService&quot; xmlns:sita2=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;/&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;tem:ARR_UpdateItinerary&gt;&#xd;
			&lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
			&lt;tem:ARR_UpdateItineraryRQ&gt;&#xd;
				&lt;sita:segmentsToAddField xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;sita:segmentsToChangeField&gt;&#xd;
					&lt;sita:ARR_UpdateItinerarySegments&gt;&#xd;
						&lt;sita:originalField&gt;&#xd;
							&lt;sita:flightInfoDetailsField&gt;&#xd;
								&lt;sita:flightLegInfoField&gt;&#xd;
									&lt;sita:arrivalAirportField&gt;&#xd;
										&lt;sita:locationCodeField&gt;CUR&lt;/sita:locationCodeField&gt;&#xd;
									&lt;/sita:arrivalAirportField&gt;&#xd;
									&lt;sita:departureAirportField&gt;&#xd;
										&lt;sita:locationCodeField&gt;BON&lt;/sita:locationCodeField&gt;&#xd;
									&lt;/sita:departureAirportField&gt;&#xd;
									&lt;sita:departureDateField&gt;2018-09-29&lt;/sita:departureDateField&gt;&#xd;
									&lt;sita:marketingAirlineField&gt;&#xd;
										&lt;sita:codeField&gt;7I&lt;/sita:codeField&gt;&#xd;
										&lt;sita:flightNumberField&gt;302&lt;/sita:flightNumberField&gt;&#xd;
									&lt;/sita:marketingAirlineField&gt;&#xd;
									&lt;sita:rPHField&gt;1&lt;/sita:rPHField&gt;&#xd;
								&lt;/sita:flightLegInfoField&gt;&#xd;
							&lt;/sita:flightInfoDetailsField&gt;&#xd;
						&lt;/sita:originalField&gt;&#xd;
						&lt;sita:updatedField&gt;&#xd;
							&lt;sita:flightInfoDetailsField&gt;&#xd;
								&lt;sita:flightLegInfoField&gt;&#xd;
									&lt;sita:arrivalAirportField&gt;&#xd;
										&lt;sita:locationCodeField&gt;CUR&lt;/sita:locationCodeField&gt;&#xd;
									&lt;/sita:arrivalAirportField&gt;&#xd;
									&lt;sita:departureAirportField&gt;&#xd;
										&lt;sita:locationCodeField&gt;BON&lt;/sita:locationCodeField&gt;&#xd;
									&lt;/sita:departureAirportField&gt;&#xd;
									&lt;sita:departureDateField&gt;2018-09-30&lt;/sita:departureDateField&gt;&#xd;
									&lt;sita:marketingAirlineField&gt;&#xd;
										&lt;sita:codeField&gt;7I&lt;/sita:codeField&gt;&#xd;
										&lt;sita:flightNumberField&gt;302&lt;/sita:flightNumberField&gt;&#xd;
									&lt;/sita:marketingAirlineField&gt;&#xd;
									&lt;sita:rPHField&gt;2&lt;/sita:rPHField&gt;&#xd;
									&lt;sita:bookingClassAvailField&gt;&#xd;
										&lt;sita1:resBookDesigCodeField&gt;Y&lt;/sita1:resBookDesigCodeField&gt;&#xd;
										&lt;sita1:resBookDesigQuantityField&gt;2&lt;/sita1:resBookDesigQuantityField&gt;&#xd;
										&lt;sita1:resBookDesigStatusCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
									&lt;/sita:bookingClassAvailField&gt;&#xd;
									&lt;sita:fareInfoField xsi:nil=&quot;true&quot;/&gt;&#xd;
								&lt;/sita:flightLegInfoField&gt;&#xd;
							&lt;/sita:flightInfoDetailsField&gt;&#xd;
						&lt;/sita:updatedField&gt;&#xd;
					&lt;/sita:ARR_UpdateItinerarySegments&gt;&#xd;
				&lt;/sita:segmentsToChangeField&gt;&#xd;
				&lt;sita:segmentsToRemoveField xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;sita:ticketingInfosField&gt;&#xd;
					&lt;sita:residingDatabaseField&gt;7I&lt;/sita:residingDatabaseField&gt;&#xd;
					&lt;sita:ticketingInfoField&gt;&#xd;
						&lt;!--Zero or more repetitions:--&gt;&#xd;
						&lt;sita:ARR_UpdateItineraryTicketingInfosTicketingInfo&gt;&#xd;
							&lt;sita2:airlineAccountingCodeField&gt;958&lt;/sita2:airlineAccountingCodeField&gt;&#xd;
							&lt;sita2:formAndSerialNumberField&gt;${ticketNbr}&lt;/sita2:formAndSerialNumberField&gt;&#xd;
						&lt;/sita:ARR_UpdateItineraryTicketingInfosTicketingInfo&gt;&#xd;
						&lt;sita:ARR_UpdateItineraryTicketingInfosTicketingInfo&gt;&#xd;
							&lt;sita2:airlineAccountingCodeField&gt;958&lt;/sita2:airlineAccountingCodeField&gt;&#xd;
							&lt;sita2:formAndSerialNumberField&gt;${ticketNbr2}&lt;/sita2:formAndSerialNumberField&gt;&#xd;
						&lt;/sita:ARR_UpdateItineraryTicketingInfosTicketingInfo&gt;&#xd;
&#xd;
					&lt;/sita:ticketingInfoField&gt;&#xd;
				&lt;/sita:ticketingInfosField&gt;&#xd;
			&lt;/tem:ARR_UpdateItineraryRQ&gt;&#xd;
		&lt;/tem:ARR_UpdateItinerary&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
&#xd;
&#xd;
&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_UpdateItinerary</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ARR_RepriceItinerary" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;/&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;tem:ARR_RepriceItinerary&gt;&#xd;
			&lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
			&lt;tem:ARR_RepriceItineraryRQ&gt;&#xd;
				&lt;sita:repriceOptionsField&gt;&#xd;
					&lt;sita1:includeNegotiatedFaresField&gt;false&lt;/sita1:includeNegotiatedFaresField&gt;&#xd;
					&lt;sita1:includeNegotiatedFaresFieldSpecified&gt;false&lt;/sita1:includeNegotiatedFaresFieldSpecified&gt;&#xd;
					&lt;sita1:negotiatedFareCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita1:negotiatedFaresOnlyField&gt;false&lt;/sita1:negotiatedFaresOnlyField&gt;&#xd;
					&lt;sita1:negotiatedFaresOnlyFieldSpecified&gt;true&lt;/sita1:negotiatedFaresOnlyFieldSpecified&gt;&#xd;
					&lt;sita1:passengerTypeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita1:pricingSourceField&gt;Both&lt;/sita1:pricingSourceField&gt;&#xd;
					&lt;sita1:pricingSourceFieldSpecified&gt;false&lt;/sita1:pricingSourceFieldSpecified&gt;&#xd;
					&lt;sita1:waiverField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:currencyConversionCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:ignoreTaxItemsField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:overrideInterlineAgreementField&gt;false&lt;/sita:overrideInterlineAgreementField&gt;&#xd;
					&lt;sita:taxExemptItemsField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:tourCodesField xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;/sita:repriceOptionsField&gt;&#xd;
				&lt;sita:ticketingInfoField&gt;&#xd;
					&lt;sita1:airlineAccountingCodeField&gt;958&lt;/sita1:airlineAccountingCodeField&gt;&#xd;
					&lt;sita1:formAndSerialNumberField&gt;${ticketNbr}&lt;/sita1:formAndSerialNumberField&gt;&#xd;
					&lt;sita:residingDatabaseField&gt;7I&lt;/sita:residingDatabaseField&gt;&#xd;
				&lt;/sita:ticketingInfoField&gt;&#xd;
&lt;!--&#xd;
				&lt;sita:ticketingInfoField&gt;&#xd;
					&lt;sita1:airlineAccountingCodeField&gt;958&lt;/sita1:airlineAccountingCodeField&gt;&#xd;
					&lt;sita1:formAndSerialNumberField&gt;${ticketNbr2}&lt;/sita1:formAndSerialNumberField&gt;&#xd;
					&lt;sita:residingDatabaseField&gt;7I&lt;/sita:residingDatabaseField&gt;&#xd;
				&lt;/sita:ticketingInfoField&gt;&#xd;
--&gt;&#xd;
			&lt;/tem:ARR_RepriceItineraryRQ&gt;&#xd;
		&lt;/tem:ARR_RepriceItinerary&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_RepriceItinerary</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ARR_ExecuteReprice" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.HalService&quot; xmlns:arr=&quot;http://schemas.microsoft.com/2003/10/Serialization/Arrays&quot; xmlns:sita2=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;/&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;tem:ARR_ExecuteReprice&gt;&#xd;
			&lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
			&lt;tem:ARR_ExecuteRepriceRQ&gt;&#xd;
				&lt;sita:baggageInfoField&gt;&#xd;
					&lt;sita:newBaggageIndField&gt;true&lt;/sita:newBaggageIndField&gt;&#xd;
				&lt;/sita:baggageInfoField&gt;&#xd;
				&lt;sita:commissionField xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;sita:endorsementsField&gt;&#xd;
					&lt;arr:string xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;/sita:endorsementsField&gt;&#xd;
				&lt;sita:passengerInfoField&gt;&#xd;
					&lt;sita:additionalPassengerInfoField&gt;ADT&lt;/sita:additionalPassengerInfoField&gt;&#xd;
					&lt;sita:emailAddressField&gt;G.STYLIANAKIS@JRTECHNOLOGIES.COM&lt;/sita:emailAddressField&gt;&#xd;
					&lt;sita:emailIndicatorField&gt;true&lt;/sita:emailIndicatorField&gt;&#xd;
					&lt;sita:sequenceNumberField&gt;1&lt;/sita:sequenceNumberField&gt;&#xd;
					&lt;sita:ticketingInfoField&gt;&#xd;
						&lt;sita2:airlineAccountingCodeField&gt;958&lt;/sita2:airlineAccountingCodeField&gt;&#xd;
						&lt;sita2:formAndSerialNumberField&gt;${ticketNbr}&lt;/sita2:formAndSerialNumberField&gt;&#xd;
						&lt;sita:salesReportInfoField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita:sponsorInfoField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita:tourCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;/sita:ticketingInfoField&gt;&#xd;
				&lt;/sita:passengerInfoField&gt;&#xd;
				&lt;sita:paymentDetailsField&gt;&#xd;
					&lt;sita1:PaymentDetailType&gt;&#xd;
						&lt;sita1:miscChargeOrderField&gt;&#xd;
						&#xd;
							&lt;sita1:couponInfoField/&gt;&#xd;
							&lt;sita1:couponRPHsField/&gt;&#xd;
							&lt;sita1:originalIssueDateField/&gt;&#xd;
							&lt;sita1:originalIssueIATAField&gt;73704444&lt;/sita1:originalIssueIATAField&gt;&#xd;
							&lt;sita1:originalIssuePlaceField/&gt;&#xd;
							&lt;sita1:originalPaymentFormField/&gt;&#xd;
							&lt;sita1:originalTicketNumberField&gt;958${ticketNbr}&lt;/sita1:originalTicketNumberField&gt;&#xd;
							&lt;sita1:paperMCO_ExistIndField/&gt;&#xd;
							&lt;sita1:ticketNumberField&gt;958${ticketNbr}&lt;/sita1:ticketNumberField&gt;&#xd;
							&#xd;
						&lt;/sita1:miscChargeOrderField&gt;&#xd;
						&lt;sita1:paymentAmountField&gt;&#xd;
							&lt;sita1:amountField&gt;135.84&lt;/sita1:amountField&gt;&#xd;
							&lt;sita1:approvalCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
							&lt;sita1:currencyCodeField&gt;USD&lt;/sita1:currencyCodeField&gt;&#xd;
							&lt;sita1:decimalPlacesField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;/sita1:paymentAmountField&gt;&#xd;
						&lt;sita1:paymentCardField&gt;&#xd;
							 &lt;sita1:addressField&gt;&#xd;
                           &lt;sita1:addressLineField&gt;&#xd;
                              &lt;!--Zero or more repetitions:--&gt;&#xd;
                              &lt;arr:string&gt;&lt;/arr:string&gt;&#xd;
                           &lt;/sita1:addressLineField&gt;&#xd;
                           &lt;sita1:typeField&gt;&lt;/sita1:typeField&gt;&#xd;
                           &lt;sita1:cityNameField&gt;&lt;/sita1:cityNameField&gt;&#xd;
                           &lt;sita1:countryField&gt;&#xd;
                              &lt;sita1:codesField&gt;&#xd;
                                 &lt;!--Zero or more repetitions:--&gt;&#xd;
                                 &lt;sita1:CountryCodesTypeCode&gt;&#xd;
                                    &lt;sita1:textField&gt;&#xd;
                                       &lt;!--Zero or more repetitions:--&gt;&#xd;
                                       &lt;arr:string&gt;&lt;/arr:string&gt;&#xd;
                                    &lt;/sita1:textField&gt;&#xd;
                                    &lt;sita1:typeField&gt;&lt;/sita1:typeField&gt;&#xd;
                                 &lt;/sita1:CountryCodesTypeCode&gt;&#xd;
                              &lt;/sita1:codesField&gt;&#xd;
                              &lt;sita1:nameField&gt;&lt;/sita1:nameField&gt;&#xd;
                           &lt;/sita1:countryField&gt;&#xd;
                           &lt;sita1:countyField&gt;&lt;/sita1:countyField&gt;&#xd;
                           &lt;sita1:formattedIndField&gt;&lt;/sita1:formattedIndField&gt;&#xd;
                           &lt;sita1:postalCodeField&gt;&lt;/sita1:postalCodeField&gt;&#xd;
                           &lt;sita1:stateProvField&gt;&#xd;
                              &lt;sita1:stateCodeField&gt;&lt;/sita1:stateCodeField&gt;&#xd;
                              &lt;sita1:textField&gt;&#xd;
                                 &lt;!--Zero or more repetitions:--&gt;&#xd;
                                 &lt;arr:string&gt;&lt;/arr:string&gt;&#xd;
                              &lt;/sita1:textField&gt;&#xd;
                           &lt;/sita1:stateProvField&gt;&#xd;
                        &lt;/sita1:addressField&gt;&#xd;
							&lt;sita1:cardCodeField/&gt;&#xd;
							&lt;sita1:cardHolderNameField&gt;BILL&lt;/sita1:cardHolderNameField&gt;&#xd;
							&lt;sita1:cardNumberField&gt;4111111111111111&lt;/sita1:cardNumberField&gt;&#xd;
							&lt;sita1:effectiveDateField/&gt;&#xd;
							&lt;sita1:expireDateField&gt;1220&lt;/sita1:expireDateField&gt;&#xd;
							&lt;sita1:seriesCodeField&gt;123&lt;/sita1:seriesCodeField&gt;&#xd;
							&lt;sita1:cardPresentIndField/&gt;&#xd;
							&lt;sita1:cardTypeField&gt;CC&lt;/sita1:cardTypeField&gt;&#xd;
							&lt;sita1:countryOfIssueField/&gt;&#xd;
							&lt;sita1:extendPaymentIndicatorField/&gt;&#xd;
							&lt;sita1:extendedPaymentQuantityField/&gt;&#xd;
							&lt;sita1:maskedCardNumberField/&gt;&#xd;
							&lt;sita1:remarkField/&gt;&#xd;
						&lt;/sita1:paymentCardField&gt;&#xd;
						&lt;sita1:paymentReferenceDataField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:paymentTypeField&gt;CC&lt;/sita1:paymentTypeField&gt;&#xd;
						&lt;sita1:primaryPaymentIndField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:splitPaymentIndField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:documentField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:passengerRPHListField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;/sita1:PaymentDetailType&gt;&#xd;
				&lt;/sita:paymentDetailsField&gt;&#xd;
				&lt;sita:penaltyField xsi:nil=&quot;true&quot;/&gt;&#xd;
			&lt;/tem:ARR_ExecuteRepriceRQ&gt;&#xd;
		&lt;/tem:ARR_ExecuteReprice&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_ExecuteReprice</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ARR_RepriceItinerary2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;/&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;tem:ARR_RepriceItinerary&gt;&#xd;
			&lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
			&lt;tem:ARR_RepriceItineraryRQ&gt;&#xd;
				&lt;sita:repriceOptionsField&gt;&#xd;
					&lt;sita1:includeNegotiatedFaresField&gt;false&lt;/sita1:includeNegotiatedFaresField&gt;&#xd;
					&lt;sita1:includeNegotiatedFaresFieldSpecified&gt;false&lt;/sita1:includeNegotiatedFaresFieldSpecified&gt;&#xd;
					&lt;sita1:negotiatedFareCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita1:negotiatedFaresOnlyField&gt;false&lt;/sita1:negotiatedFaresOnlyField&gt;&#xd;
					&lt;sita1:negotiatedFaresOnlyFieldSpecified&gt;true&lt;/sita1:negotiatedFaresOnlyFieldSpecified&gt;&#xd;
					&lt;sita1:passengerTypeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita1:pricingSourceField&gt;Both&lt;/sita1:pricingSourceField&gt;&#xd;
					&lt;sita1:pricingSourceFieldSpecified&gt;false&lt;/sita1:pricingSourceFieldSpecified&gt;&#xd;
					&lt;sita1:waiverField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:currencyConversionCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:ignoreTaxItemsField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:overrideInterlineAgreementField&gt;false&lt;/sita:overrideInterlineAgreementField&gt;&#xd;
					&lt;sita:taxExemptItemsField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;sita:tourCodesField xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;/sita:repriceOptionsField&gt;&#xd;
				&lt;sita:ticketingInfoField&gt;&#xd;
					&lt;sita1:airlineAccountingCodeField&gt;958&lt;/sita1:airlineAccountingCodeField&gt;&#xd;
					&lt;sita1:formAndSerialNumberField&gt;${ticketNbr2}&lt;/sita1:formAndSerialNumberField&gt;&#xd;
					&lt;sita:residingDatabaseField&gt;7I&lt;/sita:residingDatabaseField&gt;&#xd;
				&lt;/sita:ticketingInfoField&gt;&#xd;
			&lt;/tem:ARR_RepriceItineraryRQ&gt;&#xd;
		&lt;/tem:ARR_RepriceItinerary&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_RepriceItinerary</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ARR_ExecuteReprice2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:sita1=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.HalService&quot; xmlns:arr=&quot;http://schemas.microsoft.com/2003/10/Serialization/Arrays&quot; xmlns:sita2=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.SWF&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;soapenv:Header&gt;&#xd;
		&lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;/&gt;&#xd;
	&lt;/soapenv:Header&gt;&#xd;
	&lt;soapenv:Body&gt;&#xd;
		&lt;tem:ARR_ExecuteReprice&gt;&#xd;
			&lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
			&lt;tem:ARR_ExecuteRepriceRQ&gt;&#xd;
				&lt;sita:baggageInfoField&gt;&#xd;
					&lt;sita:newBaggageIndField&gt;true&lt;/sita:newBaggageIndField&gt;&#xd;
				&lt;/sita:baggageInfoField&gt;&#xd;
				&lt;sita:commissionField xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;sita:endorsementsField&gt;&#xd;
					&lt;arr:string xsi:nil=&quot;true&quot;/&gt;&#xd;
				&lt;/sita:endorsementsField&gt;&#xd;
				&lt;sita:passengerInfoField&gt;&#xd;
					&lt;sita:additionalPassengerInfoField&gt;ADT&lt;/sita:additionalPassengerInfoField&gt;&#xd;
					&lt;sita:emailAddressField&gt;G.STYLIANAKIS@JRTECHNOLOGIES.COM&lt;/sita:emailAddressField&gt;&#xd;
					&lt;sita:emailIndicatorField&gt;true&lt;/sita:emailIndicatorField&gt;&#xd;
					&lt;sita:sequenceNumberField&gt;2&lt;/sita:sequenceNumberField&gt;&#xd;
					&lt;sita:ticketingInfoField&gt;&#xd;
						&lt;sita2:airlineAccountingCodeField&gt;958&lt;/sita2:airlineAccountingCodeField&gt;&#xd;
						&lt;sita2:formAndSerialNumberField&gt;${ticketNbr2}&lt;/sita2:formAndSerialNumberField&gt;&#xd;
						&lt;sita:salesReportInfoField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita:sponsorInfoField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita:tourCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;/sita:ticketingInfoField&gt;&#xd;
				&lt;/sita:passengerInfoField&gt;&#xd;
				&lt;sita:paymentDetailsField&gt;&#xd;
					&lt;sita1:PaymentDetailType&gt;&#xd;
						&lt;sita1:miscChargeOrderField&gt;&#xd;
						&#xd;
							&lt;sita1:couponInfoField/&gt;&#xd;
							&lt;sita1:couponRPHsField/&gt;&#xd;
							&lt;sita1:originalIssueDateField/&gt;&#xd;
							&lt;sita1:originalIssueIATAField&gt;73704444&lt;/sita1:originalIssueIATAField&gt;&#xd;
							&lt;sita1:originalIssuePlaceField/&gt;&#xd;
							&lt;sita1:originalPaymentFormField/&gt;&#xd;
							&lt;sita1:originalTicketNumberField&gt;958${ticketNbr2}&lt;/sita1:originalTicketNumberField&gt;&#xd;
							&lt;sita1:paperMCO_ExistIndField/&gt;&#xd;
							&lt;sita1:ticketNumberField&gt;958${ticketNbr2}&lt;/sita1:ticketNumberField&gt;&#xd;
							&#xd;
						&lt;/sita1:miscChargeOrderField&gt;&#xd;
&#xd;
						&lt;sita1:paymentAmountField&gt;&#xd;
							&lt;sita1:amountField&gt;135.84&lt;/sita1:amountField&gt;&#xd;
							&lt;sita1:approvalCodeField xsi:nil=&quot;true&quot;/&gt;&#xd;
							&lt;sita1:currencyCodeField&gt;USD&lt;/sita1:currencyCodeField&gt;&#xd;
							&lt;sita1:decimalPlacesField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;/sita1:paymentAmountField&gt;&#xd;
						&lt;sita1:paymentCardField&gt;&#xd;
							 &lt;sita1:addressField&gt;&#xd;
                           &lt;sita1:addressLineField&gt;&#xd;
                              &lt;!--Zero or more repetitions:--&gt;&#xd;
                              &lt;arr:string&gt;&lt;/arr:string&gt;&#xd;
                           &lt;/sita1:addressLineField&gt;&#xd;
                           &lt;sita1:typeField&gt;&lt;/sita1:typeField&gt;&#xd;
                           &lt;sita1:cityNameField&gt;&lt;/sita1:cityNameField&gt;&#xd;
                           &lt;sita1:countryField&gt;&#xd;
                              &lt;sita1:codesField&gt;&#xd;
                                 &lt;!--Zero or more repetitions:--&gt;&#xd;
                                 &lt;sita1:CountryCodesTypeCode&gt;&#xd;
                                    &lt;sita1:textField&gt;&#xd;
                                       &lt;!--Zero or more repetitions:--&gt;&#xd;
                                       &lt;arr:string&gt;&lt;/arr:string&gt;&#xd;
                                    &lt;/sita1:textField&gt;&#xd;
                                    &lt;sita1:typeField&gt;&lt;/sita1:typeField&gt;&#xd;
                                 &lt;/sita1:CountryCodesTypeCode&gt;&#xd;
                              &lt;/sita1:codesField&gt;&#xd;
                              &lt;sita1:nameField&gt;&lt;/sita1:nameField&gt;&#xd;
                           &lt;/sita1:countryField&gt;&#xd;
                           &lt;sita1:countyField&gt;&lt;/sita1:countyField&gt;&#xd;
                           &lt;sita1:formattedIndField&gt;&lt;/sita1:formattedIndField&gt;&#xd;
                           &lt;sita1:postalCodeField&gt;&lt;/sita1:postalCodeField&gt;&#xd;
                           &lt;sita1:stateProvField&gt;&#xd;
                              &lt;sita1:stateCodeField&gt;&lt;/sita1:stateCodeField&gt;&#xd;
                              &lt;sita1:textField&gt;&#xd;
                                 &lt;!--Zero or more repetitions:--&gt;&#xd;
                                 &lt;arr:string&gt;&lt;/arr:string&gt;&#xd;
                              &lt;/sita1:textField&gt;&#xd;
                           &lt;/sita1:stateProvField&gt;&#xd;
                        &lt;/sita1:addressField&gt;&#xd;
							&lt;sita1:cardCodeField/&gt;&#xd;
							&lt;sita1:cardHolderNameField&gt;BILL&lt;/sita1:cardHolderNameField&gt;&#xd;
							&lt;sita1:cardNumberField&gt;4111111111111111&lt;/sita1:cardNumberField&gt;&#xd;
							&lt;sita1:effectiveDateField/&gt;&#xd;
							&lt;sita1:expireDateField&gt;1220&lt;/sita1:expireDateField&gt;&#xd;
							&lt;sita1:seriesCodeField&gt;123&lt;/sita1:seriesCodeField&gt;&#xd;
							&lt;sita1:cardPresentIndField/&gt;&#xd;
							&lt;sita1:cardTypeField&gt;CC&lt;/sita1:cardTypeField&gt;&#xd;
							&lt;sita1:countryOfIssueField/&gt;&#xd;
							&lt;sita1:extendPaymentIndicatorField/&gt;&#xd;
							&lt;sita1:extendedPaymentQuantityField/&gt;&#xd;
							&lt;sita1:maskedCardNumberField/&gt;&#xd;
							&lt;sita1:remarkField/&gt;&#xd;
						&lt;/sita1:paymentCardField&gt;&#xd;
						&lt;sita1:paymentReferenceDataField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:paymentTypeField&gt;CC&lt;/sita1:paymentTypeField&gt;&#xd;
						&lt;sita1:primaryPaymentIndField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:splitPaymentIndField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:documentField xsi:nil=&quot;true&quot;/&gt;&#xd;
						&lt;sita1:passengerRPHListField xsi:nil=&quot;true&quot;/&gt;&#xd;
					&lt;/sita1:PaymentDetailType&gt;&#xd;
				&lt;/sita:paymentDetailsField&gt;&#xd;
				&lt;sita:penaltyField xsi:nil=&quot;true&quot;/&gt;&#xd;
			&lt;/tem:ARR_ExecuteRepriceRQ&gt;&#xd;
		&lt;/tem:ARR_ExecuteReprice&gt;&#xd;
	&lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_ExecuteReprice</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SignOut" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;soapenv:Envelope xmlns:arr=&quot;http://schemas.microsoft.com/2003/10/Serialization/Arrays&quot; xmlns:sita=&quot;http://schemas.datacontract.org/2004/07/Sita.Services.ARR&quot; xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:tem=&quot;http://tempuri.org/&quot;&gt;&#xd;
        &lt;soapenv:Header&gt;&#xd;
        &lt;hal:Config subscriberId=&quot;7I&quot; xmlns:hal=&quot;http://sita.aero/hal&quot;&gt;&#xd;
            &lt;/hal:Config&gt;&#xd;
        &lt;/soapenv:Header&gt;&#xd;
   &lt;soapenv:Body wsu:Id=&quot;id-99ED2D14CB06036292148707533715114&quot; xmlns:wsu=&quot;http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd&quot;&gt;&#xd;
      &lt;tem:ARR_SignOut&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:sessionID&gt;${SessionID}&lt;/tem:sessionID&gt;&#xd;
         &lt;!--Optional:--&gt;&#xd;
         &lt;tem:ARR_SignOutRQ&gt;&#xd;
            &lt;sita:textField&gt;&#xd;
               &lt;!--Zero or more repetitions:--&gt;&#xd;
               &lt;arr:string xsi:nil=&quot;true&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;/&gt;&#xd;
            &lt;/sita:textField&gt;&#xd;
         &lt;/tem:ARR_SignOutRQ&gt;&#xd;
      &lt;/tem:ARR_SignOut&gt;&#xd;
   &lt;/soapenv:Body&gt;&#xd;
&lt;/soapenv:Envelope&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">https://sws.qa.sita.aero/arr2b/</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">SOAPAction</stringProp>
                  <stringProp name="Header.value">http://tempuri.org/WorkflowService/ARR_SignOut</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">X-APIKey</stringProp>
                  <stringProp name="Header.value">bb82253bff639e7b4987759717821486</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Host</stringProp>
                  <stringProp name="Header.value">sws.qa.sita.aero</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="destination generator" enabled="false">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">import java.util.Random;
import java.text.SimpleDateFormat;
import java.util.Calendar;


String[] categories = (vars.get(&quot;onds&quot;)).split(&quot;,&quot;);
int idx = new Random().nextInt(categories.length/2);
String origin = categories[idx*2];
vars.put(&quot;origin&quot;, origin);

int idx2 = idx * 2 + 1;
String destination = categories[idx2];
vars.put(&quot;destination&quot;, destination);



</stringProp>
              <stringProp name="TestPlan.comments">//gets information from user defined values
//put a new variabel to the user defined variables</stringProp>
            </BeanShellPreProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Valid Response" enabled="false">
          <stringProp name="IfController.condition">${getErrorsAndWarnings}==0</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCreateRQ One Way ADT" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;edis:OrderCreateRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; TimeStamp=&quot;${timestamp}&quot; Version=&quot;IATA2016.2&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; &#xd;
xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:edis=&quot;http://www.iata.org/IATA/EDIST&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;JRT UNISYS GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Passengers&gt;&#xd;
			&lt;Passenger ObjectKey=&quot;ADT1&quot;&gt;&#xd;
				&lt;PTC Quantity=&quot;1&quot;&gt;ADT&lt;/PTC&gt;&#xd;
				&lt;Age&gt;&#xd;
					&lt;BirthDate&gt;1980-03-06&lt;/BirthDate&gt;&#xd;
				&lt;/Age&gt;&#xd;
				&lt;Name&gt;&#xd;
					&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
					&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
					&lt;Middle&gt;Edward&lt;/Middle&gt;&#xd;
				&lt;/Name&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;jaffa@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;Gender&gt;Male&lt;/Gender&gt;&#xd;
			&lt;/Passenger&gt;&#xd;
		&lt;/Passengers&gt;&#xd;
		&lt;OrderItems&gt;&#xd;
			&lt;ShoppingResponse&gt;&#xd;
				&lt;Owner&gt;NW&lt;/Owner&gt;&#xd;
				&lt;ResponseID&gt;${getResponseID}&lt;/ResponseID&gt;&#xd;
				&lt;Offers&gt;&#xd;
					&lt;Offer&gt;&#xd;
						&lt;OfferID Owner=&quot;NW&quot;&gt;SOL1#OD1&lt;/OfferID&gt;&#xd;
						&lt;OfferItems&gt;&#xd;
							&lt;OfferItem&gt;&#xd;
								&lt;OfferItemID Owner=&quot;NW&quot;&gt;SOL1#OD1#ADT1&lt;/OfferItemID&gt;&#xd;
								&lt;Passengers&gt;&#xd;
									&lt;PassengerReference&gt;ADT1&lt;/PassengerReference&gt;&#xd;
								&lt;/Passengers&gt;&#xd;
								&lt;ApplicableFlight&gt;&#xd;
									&lt;OriginDestinationReferences&gt;OD1&lt;/OriginDestinationReferences&gt;&#xd;
								&lt;/ApplicableFlight&gt;&#xd;
								&lt;AssociatedServices&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV9&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV9&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
									&lt;AssociatedService refs=&quot;SV2&quot;&gt;&#xd;
										&lt;ServiceID Owner=&quot;NW&quot;&gt;SV2&lt;/ServiceID&gt;&#xd;
									&lt;/AssociatedService&gt;&#xd;
								&lt;/AssociatedServices&gt;&#xd;
							&lt;/OfferItem&gt;&#xd;
						&lt;/OfferItems&gt;&#xd;
					&lt;/Offer&gt;&#xd;
				&lt;/Offers&gt;&#xd;
			&lt;/ShoppingResponse&gt;&#xd;
			&lt;OfferItem&gt;&#xd;
				&lt;OfferItemID Owner=&quot;NW&quot;&gt;SOL1#OD1#ADT1&lt;/OfferItemID&gt;&#xd;
				&lt;OfferItemType&gt;&#xd;
					&lt;DetailedFlightItem&gt;&#xd;
						&lt;OriginDestination&gt;&#xd;
							&lt;Flight&gt;&#xd;
								&lt;Departure&gt;&#xd;
									&lt;AirportCode&gt;${getDepartureCodeSEG1}&lt;/AirportCode&gt;&#xd;
									&lt;Date&gt;${getDepartureDateSEG1}&lt;/Date&gt;&#xd;
									&lt;Time&gt;${getDepartureTimeSEG1}&lt;/Time&gt;&#xd;
								&lt;/Departure&gt;&#xd;
								&lt;Arrival&gt;&#xd;
									&lt;AirportCode&gt;${getArrivalCodeSEG1}&lt;/AirportCode&gt;&#xd;
									&lt;Date&gt;${getArrivalDateSEG1}&lt;/Date&gt;&#xd;
								&lt;/Arrival&gt;&#xd;
								&lt;MarketingCarrier&gt;&#xd;
									&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
									&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
								&lt;/MarketingCarrier&gt;&#xd;
								&lt;OperatingCarrier&gt;&#xd;
									&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
									&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
								&lt;/OperatingCarrier&gt;&#xd;
							&lt;/Flight&gt;&#xd;
						&lt;/OriginDestination&gt;&#xd;
						&lt;FareDetail&gt;&#xd;
							&lt;FareComponent&gt;&#xd;
								&lt;SegmentReference&gt;SEG1&lt;/SegmentReference&gt;&#xd;
								&lt;PriceBreakdown&gt;&#xd;
									&lt;Price&gt;&#xd;
										&lt;BaseAmount Code=&quot;USD&quot;&gt;${getBaseAmountSEG1ADT1}&lt;/BaseAmount&gt;&#xd;
										&lt;Taxes&gt;&#xd;
											&lt;Total Code=&quot;USD&quot;&gt;${getTaxAmountSEG1ADT1}&lt;/Total&gt;&#xd;
										&lt;/Taxes&gt;&#xd;
									&lt;/Price&gt;&#xd;
								&lt;/PriceBreakdown&gt;&#xd;
								&lt;FareBasis&gt;&#xd;
									&lt;FareBasisCode&gt;&#xd;
										&lt;Code&gt;${getFareBasisCodeSEG1ADT1}&lt;/Code&gt;&#xd;
									&lt;/FareBasisCode&gt;&#xd;
									&lt;RBD&gt;Y&lt;/RBD&gt;&#xd;
								&lt;/FareBasis&gt;&#xd;
								&lt;FareRules&gt;&#xd;
									&lt;Remarks&gt;&#xd;
										&lt;Remark&gt;${getRemarksSEG1ADT1}&lt;/Remark&gt;&#xd;
									&lt;/Remarks&gt;&#xd;
								&lt;/FareRules&gt;&#xd;
							&lt;/FareComponent&gt;&#xd;
						&lt;/FareDetail&gt;&#xd;
					&lt;/DetailedFlightItem&gt;&#xd;
				&lt;/OfferItemType&gt;&#xd;
				&lt;TimeLimits&gt;&#xd;
					&lt;TimeLimit&gt;&#xd;
						&lt;PriceGuaranteeTimeLimit Timestamp=&quot;${getPriceGuaranteeTimeLimit}&quot;/&gt;&#xd;
						&lt;TicketByTimeLimit&gt;&#xd;
							&lt;TicketBy&gt;${getTicketBy}&lt;/TicketBy&gt;&#xd;
						&lt;/TicketByTimeLimit&gt;&#xd;
					&lt;/TimeLimit&gt;&#xd;
				&lt;/TimeLimits&gt;&#xd;
			&lt;/OfferItem&gt;&#xd;
		&lt;/OrderItems&gt;&#xd;
		&lt;DataLists&gt;&#xd;
			&lt;edis:CarryOnAllowanceList&gt;&#xd;
				&lt;edis:CarryOnAllowance ListKey=&quot;AW1&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;30&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;5&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CarryOnAllowance&gt;&#xd;
			&lt;/edis:CarryOnAllowanceList&gt;&#xd;
			&lt;edis:CheckedBagAllowanceList&gt;&#xd;
				&lt;edis:CheckedBagAllowance ListKey=&quot;AW2&quot;&gt;&#xd;
					&lt;edis:DimensionAllowance&gt;&#xd;
						&lt;edis:DimensionUOM&gt;Inch&lt;/edis:DimensionUOM&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;L&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;15&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;W&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;16&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
						&lt;edis:Dimensions&gt;&#xd;
							&lt;edis:Category&gt;H&lt;/edis:Category&gt;&#xd;
							&lt;edis:MaxValue&gt;17&lt;/edis:MaxValue&gt;&#xd;
						&lt;/edis:Dimensions&gt;&#xd;
					&lt;/edis:DimensionAllowance&gt;&#xd;
					&lt;edis:WeightAllowance&gt;&#xd;
						&lt;edis:MaximumWeight&gt;&#xd;
							&lt;edis:Value&gt;10&lt;/edis:Value&gt;&#xd;
							&lt;edis:UOM&gt;Kilogram&lt;/edis:UOM&gt;&#xd;
						&lt;/edis:MaximumWeight&gt;&#xd;
					&lt;/edis:WeightAllowance&gt;&#xd;
				&lt;/edis:CheckedBagAllowance&gt;&#xd;
			&lt;/edis:CheckedBagAllowanceList&gt;&#xd;
			&lt;FlightSegmentList&gt;&#xd;
				&lt;FlightSegment SegmentKey=&quot;SEG1&quot;&gt;&#xd;
					&lt;Departure&gt;&#xd;
						&lt;AirportCode&gt;${getDepartureCodeSEG1}&lt;/AirportCode&gt;&#xd;
						&lt;Date&gt;${getDepartureDateSEG1}&lt;/Date&gt;&#xd;
						&lt;Time&gt;${getDepartureTimeSEG1}&lt;/Time&gt;&#xd;
					&lt;/Departure&gt;&#xd;
					&lt;Arrival&gt;&#xd;
						&lt;AirportCode&gt;${getArrivalCodeSEG1}&lt;/AirportCode&gt;&#xd;
						&lt;Date&gt;${getArrivalDateSEG1}&lt;/Date&gt;&#xd;
					&lt;/Arrival&gt;&#xd;
					&lt;MarketingCarrier&gt;&#xd;
						&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
						&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
					&lt;/MarketingCarrier&gt;&#xd;
					&lt;OperatingCarrier&gt;&#xd;
						&lt;AirlineID&gt;NW&lt;/AirlineID&gt;&#xd;
						&lt;FlightNumber&gt;${getFlightNumber}&lt;/FlightNumber&gt;&#xd;
					&lt;/OperatingCarrier&gt;&#xd;
					&lt;Equipment&gt;&#xd;
						&lt;AircraftCode&gt;${getAircraftCode}&lt;/AircraftCode&gt;&#xd;
					&lt;/Equipment&gt;&#xd;
					&lt;ClassOfService&gt;&#xd;
						&lt;Code&gt;${getClassOfService}&lt;/Code&gt;&#xd;
						&lt;MarketingName&gt;Economy&lt;/MarketingName&gt;&#xd;
					&lt;/ClassOfService&gt;&#xd;
					&lt;FlightDetail&gt;&#xd;
						&lt;FlightDuration&gt;&#xd;
							&lt;Value&gt;PT5H0M&lt;/Value&gt;&#xd;
						&lt;/FlightDuration&gt;&#xd;
					&lt;/FlightDetail&gt;&#xd;
				&lt;/FlightSegment&gt;&#xd;
			&lt;/FlightSegmentList&gt;&#xd;
			&lt;FlightList&gt;&#xd;
				&lt;Flight FlightKey=&quot;FL1&quot;&gt;&#xd;
					&lt;Journey&gt;&#xd;
						&lt;Time&gt;PT16H10M&lt;/Time&gt;&#xd;
					&lt;/Journey&gt;&#xd;
					&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
				&lt;/Flight&gt;&#xd;
			&lt;/FlightList&gt;&#xd;
			&lt;OriginDestinationList&gt;&#xd;
				&lt;OriginDestination OriginDestinationKey=&quot;OD1&quot;&gt;&#xd;
					&lt;DepartureCode&gt;${getDepartureCodeSEG1}&lt;/DepartureCode&gt;&#xd;
					&lt;ArrivalCode&gt;${getArrivalCodeSEG1}&lt;/ArrivalCode&gt;&#xd;
					&lt;FlightReferences&gt;FL1&lt;/FlightReferences&gt;&#xd;
				&lt;/OriginDestination&gt;&#xd;
			&lt;/OriginDestinationList&gt;&#xd;
			&lt;ServiceList&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV2&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;50&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Veg Meal&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;G&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0AP&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;Veg Meal&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;0.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;OTHS&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
				&lt;Service ObjectKey=&quot;SV9&quot;&gt;&#xd;
					&lt;ServiceID Owner=&quot;NW&quot;&gt;1026&lt;/ServiceID&gt;&#xd;
					&lt;Name&gt;Excess Baggage&lt;/Name&gt;&#xd;
					&lt;Encoding&gt;&#xd;
						&lt;RFIC&gt;&#xd;
							&lt;Code&gt;C&lt;/Code&gt;&#xd;
						&lt;/RFIC&gt;&#xd;
						&lt;SubCode&gt;0CC&lt;/SubCode&gt;&#xd;
					&lt;/Encoding&gt;&#xd;
					&lt;Descriptions&gt;&#xd;
						&lt;Description&gt;&#xd;
							&lt;Text&gt;EXCESS BAGGAGE&lt;/Text&gt;&#xd;
						&lt;/Description&gt;&#xd;
					&lt;/Descriptions&gt;&#xd;
					&lt;Price&gt;&#xd;
						&lt;Total Code=&quot;USD&quot;&gt;25.00&lt;/Total&gt;&#xd;
						&lt;PassengerReferences&gt;ADT1&lt;/PassengerReferences&gt;&#xd;
					&lt;/Price&gt;&#xd;
					&lt;BookingInstructions&gt;&#xd;
						&lt;SSRCode&gt;XBAG&lt;/SSRCode&gt;&#xd;
					&lt;/BookingInstructions&gt;&#xd;
					&lt;Associations&gt;&#xd;
						&lt;Flight&gt;&#xd;
							&lt;SegmentReferences&gt;SEG1&lt;/SegmentReferences&gt;&#xd;
						&lt;/Flight&gt;&#xd;
						&lt;OtherAssociations&gt;&#xd;
							&lt;OtherAssociation&gt;&#xd;
								&lt;Type&gt;CARRY&lt;/Type&gt;&#xd;
								&lt;ReferenceValue&gt;AW1&lt;/ReferenceValue&gt;&#xd;
							&lt;/OtherAssociation&gt;&#xd;
						&lt;/OtherAssociations&gt;&#xd;
					&lt;/Associations&gt;&#xd;
				&lt;/Service&gt;&#xd;
			&lt;/ServiceList&gt;&#xd;
		&lt;/DataLists&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/edis:OrderCreateRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="getOrderID" enabled="true">
              <stringProp name="XPathExtractor.default">null</stringProp>
              <stringProp name="XPathExtractor.refname">getOrderID</stringProp>
              <stringProp name="XPathExtractor.matchNumber">-1</stringProp>
              <stringProp name="XPathExtractor.xpathQuery">/OrderViewRS/Response/Order/OrderID</stringProp>
              <boolProp name="XPathExtractor.validate">false</boolProp>
              <boolProp name="XPathExtractor.tolerant">false</boolProp>
              <boolProp name="XPathExtractor.namespace">false</boolProp>
            </XPathExtractor>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderViewRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AirDocIssueRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;AirDocIssueRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-12-04T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;TicketDocQuantity&gt;1&lt;/TicketDocQuantity&gt;&#xd;
		&lt;TicketDocInfo&gt;&#xd;
			&lt;TravelerInfo&gt;&#xd;
				&lt;Surname&gt;Jaffa&lt;/Surname&gt;&#xd;
				&lt;Given&gt;Eric&lt;/Given&gt;&#xd;
			&lt;/TravelerInfo&gt;&#xd;
			&lt;OrderReference&gt;&#xd;
				&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
			&lt;/OrderReference&gt;&#xd;
			&lt;Payments&gt;&#xd;
				&lt;Payment&gt;&#xd;
					&lt;Type&gt;&#xd;
						&lt;Code&gt;003&lt;/Code&gt;&#xd;
					&lt;/Type&gt;&#xd;
					&lt;PaymentCard&gt;&#xd;
						&lt;CardType&gt;VISA&lt;/CardType&gt;&#xd;
						&lt;CardCode&gt;VI&lt;/CardCode&gt;&#xd;
						&lt;CardNumber&gt;4111111111111111&lt;/CardNumber&gt;&#xd;
						&lt;SeriesCode&gt;123&lt;/SeriesCode&gt;&#xd;
						&lt;CardHolderName&gt;Patel Ramesh&lt;/CardHolderName&gt;&#xd;
						&lt;CardHolderBillingAddress&gt;&#xd;
							&lt;Street&gt;22 Main Street&lt;/Street&gt;&#xd;
							&lt;CityName&gt;FRA&lt;/CityName&gt;&#xd;
							&lt;PostalCode&gt;14201&lt;/PostalCode&gt;&#xd;
							&lt;CountryCode&gt;DE&lt;/CountryCode&gt;&#xd;
						&lt;/CardHolderBillingAddress&gt;&#xd;
						&lt;Amount Code=&quot;USD&quot; Taxable=&quot;true&quot;&gt;${getPayment}&lt;/Amount&gt;&#xd;
						&lt;EffectiveExpireDate&gt;&#xd;
							&lt;Expiration&gt;0818&lt;/Expiration&gt;&#xd;
						&lt;/EffectiveExpireDate&gt;&#xd;
					&lt;/PaymentCard&gt;&#xd;
				&lt;/Payment&gt;&#xd;
			&lt;/Payments&gt;&#xd;
		&lt;/TicketDocInfo&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/AirDocIssueRQ&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderRetrieveRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderRetrieveRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot;  xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Filters&gt;&#xd;
			&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
		&lt;/Filters&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderRetrieveRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderViewRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderHistoryRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderHistoryRQ xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; Version=&quot;IATA2016.2&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-08-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderHistoryRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:/tmp/16_2 schemas_EDIST/OrderHistoryRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderListRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderListRQ EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; TimeStamp=&quot;2015-12-10T12:39:00Z&quot; Version=&quot;IATA2016.2&quot; Target=&quot;Test&quot; PrimaryLangID=&quot;en&quot; AltLangID=&quot;en&quot; RetransmissionIndicator=&quot;false&quot; AsynchronousAllowedInd=&quot;false&quot; TransactionIdentifier=&quot;a&quot; SequenceNmbr=&quot;113&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
	&lt;PointOfSale&gt;&#xd;
		&lt;Location&gt;&#xd;
			&lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
			&lt;CityCode&gt;FRA&lt;/CityCode&gt;&#xd;
		&lt;/Location&gt;&#xd;
		&lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
		&lt;TouchPoint&gt;&#xd;
			&lt;Device&gt;&#xd;
				&lt;Code&gt;2&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
				&lt;Position&gt;&#xd;
					&lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
					&lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
					&lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
				&lt;/Position&gt;&#xd;
			&lt;/Device&gt;&#xd;
			&lt;Event&gt;&#xd;
				&lt;Code&gt;1&lt;/Code&gt;&#xd;
				&lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
			&lt;/Event&gt;&#xd;
		&lt;/TouchPoint&gt;&#xd;
	&lt;/PointOfSale&gt;&#xd;
	&lt;Document&gt;&#xd;
		&lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
		&lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
	&lt;/Document&gt;&#xd;
	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;Admin&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
	&lt;Query&gt;&#xd;
		&lt;Filters&gt;&#xd;
			&lt;TravelDateRange&gt;&#xd;
				&lt;Effective&gt;${getDepartureDateSEG1}&lt;/Effective&gt;&#xd;
				&lt;Expiration&gt;${getArrivalDateSEG1}&lt;/Expiration&gt;&#xd;
			&lt;/TravelDateRange&gt;&#xd;
		&lt;/Filters&gt;&#xd;
	&lt;/Query&gt;&#xd;
&lt;/OrderListRQ&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderListRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="OrderCancelRQ" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;yes&quot;?&gt;&#xd;
&lt;OrderCancelRQ Version=&quot;IATA2016.2&quot; EchoToken=&quot;${cntr}-${origin}-${destination}-${adt_number}ADT-${chd_number}CHD-1OND&quot; xmlns=&quot;http://www.iata.org/IATA/EDIST&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&gt;&#xd;
         &lt;PointOfSale&gt;&#xd;
            &lt;Location&gt;&#xd;
               &lt;CountryCode&gt;US&lt;/CountryCode&gt;&#xd;
               &lt;CityCode&gt;MSP&lt;/CityCode&gt;&#xd;
            &lt;/Location&gt;&#xd;
            &lt;RequestTime Zone=&quot;EST&quot;&gt;2017-05-24T07:45:00+07:45&lt;/RequestTime&gt;&#xd;
            &lt;TouchPoint&gt;&#xd;
               &lt;Device&gt;&#xd;
                  &lt;Code&gt;2&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Web Browser&lt;/Definition&gt;&#xd;
                  &lt;Position&gt;&#xd;
                     &lt;Latitude&gt;38.89756&lt;/Latitude&gt;&#xd;
                     &lt;Longitude&gt;-77.03650&lt;/Longitude&gt;&#xd;
                     &lt;NAC&gt;8KD7V PGGM0&lt;/NAC&gt;&#xd;
                  &lt;/Position&gt;&#xd;
               &lt;/Device&gt;&#xd;
               &lt;Event&gt;&#xd;
                  &lt;Code&gt;1&lt;/Code&gt;&#xd;
                  &lt;Definition&gt;Order or buy&lt;/Definition&gt;&#xd;
               &lt;/Event&gt;&#xd;
            &lt;/TouchPoint&gt;&#xd;
         &lt;/PointOfSale&gt;&#xd;
         &lt;Document&gt;&#xd;
            &lt;Name&gt;UNISYS NDC GATEWAY&lt;/Name&gt;&#xd;
            &lt;ReferenceVersion&gt;1.0&lt;/ReferenceVersion&gt;&#xd;
         &lt;/Document&gt;&#xd;
        	&lt;Party&gt;&#xd;
		&lt;Sender&gt;&#xd;
			&lt;TravelAgencySender&gt;&#xd;
				&lt;Contacts&gt;&#xd;
					&lt;Contact&gt;&#xd;
						&lt;EmailContact&gt;&#xd;
							&lt;Address&gt;ndc@unisys.com&lt;/Address&gt;&#xd;
						&lt;/EmailContact&gt;&#xd;
					&lt;/Contact&gt;&#xd;
				&lt;/Contacts&gt;&#xd;
				&lt;PseudoCity&gt;A4A&lt;/PseudoCity&gt;&#xd;
				&lt;IATA_Number&gt;98417900&lt;/IATA_Number&gt;&#xd;
				&lt;AgencyID Owner=&quot;NW&quot;&gt;NW&lt;/AgencyID&gt;&#xd;
				&lt;AgentUser&gt;&#xd;
					&lt;Name&gt;ksmith&lt;/Name&gt;&#xd;
					&lt;AgentUserID&gt;ksmith212&lt;/AgentUserID&gt;&#xd;
					&lt;UserRole&gt;ADMIN&lt;/UserRole&gt;&#xd;
				&lt;/AgentUser&gt;&#xd;
			&lt;/TravelAgencySender&gt;&#xd;
		&lt;/Sender&gt;&#xd;
	&lt;/Party&gt;&#xd;
    &lt;Query&gt;&#xd;
        &lt;OrderID Owner=&quot;NW&quot;&gt;${getOrderID}&lt;/OrderID&gt;&#xd;
    &lt;/Query&gt;&#xd;
&#xd;
    &lt;/OrderCancelRQ&gt;&#xd;
</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${endpoint}</stringProp>
            <stringProp name="HTTPSampler.port">${port}</stringProp>
            <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${SubPath}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/xml</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="true">
              <stringProp name="xmlschema_assertion_filename">C:\tmp\16_2 schemas_EDIST\OrderCancelRS.xsd</stringProp>
            </XMLSchemaAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <XMLSchemaAssertion guiclass="XMLSchemaAssertionGUI" testclass="XMLSchemaAssertion" testname="XML Schema Assertion" enabled="false">
          <stringProp name="xmlschema_assertion_filename">C:\schemas\NDC\16.2\AirShoppingRS.xsd</stringProp>
        </XMLSchemaAssertion>
        <hashTree/>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Delay" enabled="false">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">0</intProp>
          <stringProp name="ActionProcessor.duration">${delay}</stringProp>
        </TestAction>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <com.atlantbh.jmeter.plugins.xmlformatter.XMLFormatPostProcessor guiclass="com.atlantbh.jmeter.plugins.xmlformatter.gui.XMLFormatPostProcessorGui" testclass="com.atlantbh.jmeter.plugins.xmlformatter.XMLFormatPostProcessor" testname="jp@gc - XML Format Post Processor" enabled="true"/>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>true</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>true</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ObsoleteGui" testclass="ResultCollector" testname="Monitor Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Graph Results" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
